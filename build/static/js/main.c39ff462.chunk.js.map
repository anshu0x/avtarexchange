{"version":3,"sources":["assets/images/avtar.png","assets/images/dashboard.png","assets/images/swap.png","assets/images/buy-escrow.png","components/sidebar/index.js","assets/images/bnb.png","assets/images/usdt.png","assets/images/eth.png","assets/images/user.png","assets/images/user2.png","assets/images/wallet.png","assets/images/key.png","assets/images/key2.png","redux/auth/auth-type.js","utils/currentWallet.utility.js","components/layout/index.js","redux/auth/auth-action.js","components/mainPanel/index.js","pages/Home.js","components/customInput/index.js","assets/images/shield.png","pages/login/index.js","pages/signup/index.js","pages/ForgotPassword.js","pages/ResetPassword.js","components/modals/TransactionModal.js","components/swapPanel/index.js","pages/Swap.js","components/buyPanel/index.js","pages/Buy.js","pages/VerifyEmail.js","redux/auth/auth-reducer.js","redux/users/user-type.js","redux/users/user-reducer.js","redux/root-reducer.js","redux/store.js","pages/Users.js","redux/users/user-action.js","assets/images/transfer.png","assets/images/paper-plane.png","components/sendPanal/index.js","pages/Send.js","pages/PrivacyPolicy.js","pages/TermsCondition.js","components/Analytics/AnalyticsCard.js","components/Analytics/TableRow.js","components/Analytics/AnalyticsTable.js","services/liveChartApi.js","pages/LiveChart.js","pages/CoinChart.js","components/protectedRoute/index.js","App.js","index.js"],"names":["connect","state","auth","show","setShow","menuRef","useRef","useEffect","handler","e","current","contains","target","document","addEventListener","removeEventListener","className","ref","to","style","width","src","Logo","alt","CustomLink","activeOnlyWhenExact","icon","Dashboard","text","data","role","Buyescrow","swap","children","props","resolved","useResolvedPath","match","useMatch","path","pathname","end","SIGNUP","SIGNUP_SUCCESS","SIGNUP_ERROR","LOGIN_SUCCESS","LOGOUT","getWeb3","a","console","log","Web3","givenProvider","web3","createAccount","account","eth","accounts","create","dispatch","navigator","useNavigate","useState","showPopup","setShowPopup","fullName","privateKey","walletKey","userDetails","setUserDetails","userPrivateKey","privateKeys","setPrivateKey","store","useStore","getState","userData","JSON","parse","localStorage","getItem","jwtToken","wallet","onClick","prev","User","User2","Wallet","Key","preventDefault","Key2","tool","removeItem","type","require","Panel","USDTbalance","setUSDTBalance","BNBbalance","setBNBBalance","ETHbalance","setETHBalance","AVATARbalance","setAVATARBalance","walletid","setWalletid","USDTContract","setUSDTContract","BNBContract","setBNBContract","ETHContract","setETHContract","AVATARContract","setAVATARContract","transactions","setTransactions","error","setError","methods","balanceOf","call","getBalance","getUSDTBalance","getBNBBalance","getETHBalance","getAVATARBalance","utils","toChecksumAddress","USDTtokenAddress","USDT","address","USDTtokenABI","abi","Contract","BNBtokenAddress","BNB","BNBtokenABI","ETHtokenAddress","ETH","ETHtokenABI","AVATARtokenAddress","AVATAR","AVATARtokenABI","config","headers","Authorization","axios","get","then","res","catch","err","errMsg","response","message","toFixed","Avtar","Eth","Bnb","Usdt","length","map","transaction","index","userID","from","amount","currency","Date","date","toLocaleDateString","toLocaleTimeString","Home","CustomInput","name","id","loggedIn","setLoggedIn","LoginSchema","Yup","shape","email","required","min","max","password","matches","replace","shield","enableReinitialize","initialValues","validationSchema","onSubmit","fields","post","process","setItem","stringify","put","payload","errors","touched","values","setValues","isValid","placeholder","href","setRegistered","registered","SignUpSchema","confirmPassword","msg","setMsg","otpSent","setOtpSent","modalStyles","backgroundColor","backdropFilter","pointerEvents","opacity","ResetSchema","search","useLocation","URLSearchParams","token","passReset","setPassReset","TransactionModal","open","setOpen","title","subTitle","refresh","button","coins","image","Avatar","shortName","CONFIG","approvalModal","setApprovalModal","successModal","setSuccessModal","errorModal","setErrorModal","selected","setSelected","selected2","setSelected2","active","setActive","active2","setActive2","avatarPrice","setAvatarPrice","avatarValue","setAvatarValue","bnbValue","setBnbValue","txId","setTxId","reg","getPrice","contract","avatarContract","privateKeyToAccount","acc","fromWei","alert","Number","toWei","toString","amount2","getTransactionCount","count","signTransaction","_address","value","gas","swapETHForExactTokens","Math","floor","now","encodeABI","nonce","toHex","sendSignedTransaction","rawTransaction","transactionHash","xmlns","viewBox","d","avatarInputHandler","test","bnbInputHandler","SwapForm","action","price","defaultValue","disabled","onChange","Swap","Buy","VerifyEmail","initialState","loading","reducer","GET_USERS","GET_USERS_SUCCESS","GET_USERS_ERROR","combineReducers","users","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","setUsers","status","user","created","isVerified","for","checked","block","handleClick","setAmount","receiverwallet","setReceiverwallet","add","stack","transfer","parseInt","transferAmount","paddingLeft","paddingRight","display","ShareformLogo","color","flexDirection","Send","coin","i","marginBottom","PrivacyPolicy","TermsCondition","AnalyticsCard","green","change","changeValue","border","borderColor","parseFloat","TableRow","undefined","class","market_cap_rank","symbol","current_price","price_change_percentage_24h","market_cap","AnalyticsTable","coinList","showCoins","setShowCoins","searchQuery","setSearchQuery","tempCoins","forEach","toLowerCase","includes","push","ChartAPI","globalInfo","fetch","API_URL","json","allCoinInfo","coinInfo","this","LiveChart","bitcoin","setBitcoin","bitImg","setBitImg","ethereum","setEthereum","ethImg","setEthImg","setCoinList","market_data","usd","small","CoinChart","useParams","setName","setPrice","history","setHistory","sparkline_7d","maxWidth","minHeight","labels","list","listOfLength","datasets","borderWidth","pointRadius","options","responsive","maintainAspectRatio","plugins","legend","ProtectedRoute","App","element","ForgotPassword","ResetPassword","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c39ff462.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avtar.cf56fb59.png\";","export default __webpack_public_path__ + \"static/media/dashboard.46e32944.png\";","export default __webpack_public_path__ + \"static/media/swap.b9861fad.png\";","export default __webpack_public_path__ + \"static/media/buy-escrow.beaa0e43.png\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from \"react\";\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\n\nimport Logo from \"../../assets/images/avtar.png\";\nimport Dashboard from \"../../assets/images/dashboard.png\";\nimport swap from \"../../assets/images/swap.png\";\nimport Buyescrow from \"../../assets/images/buy-escrow.png\";\nimport \"./style.css\";\nimport { connect } from \"react-redux\";\n\nconst Sidebar = ({ show, setShow, auth }) => {\n  const menuRef = useRef(null);\n  useEffect(() => {\n    const handler = (e) => {\n      if (!menuRef.current.contains(e.target)) {\n        setShow(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n    };\n  }, []);\n\n  return (\n    <div\n      className={`sidebar ${show && \"active\"} bg-dark-400 text-white`}\n      ref={menuRef}\n    >\n      <Link to=\"/\" className=\"px-4 py-2  mb-4 flex items-center\">\n        <div\n          className=\"w-6 flex-shrink-0\"\n          style={{\n            width: \"50px\",\n          }}\n        >\n          <img\n            src={Logo}\n            alt=\"\"\n            style={{\n              width: \"50px\",\n            }}\n          />\n        </div>\n        <p className=\"font-bold ml-2 text-xl  tracking-widest\">AVTAR</p>\n      </Link>\n      <div className=\"\">\n        <CustomLink\n          activeOnlyWhenExact={true}\n          to=\"/\"\n          icon={Dashboard}\n          text={\"Dashboard\"}\n        />\n        {auth.data?.role === \"Admin\" && (\n          <CustomLink\n            activeOnlyWhenExact={true}\n            to=\"/users\"\n            icon={Dashboard}\n            text={\"Users\"}\n          />\n        )}\n        <CustomLink\n          activeOnlyWhenExact={true}\n          to=\"/send\"\n          icon={Buyescrow}\n          text={\"Send\"}\n        />\n        <CustomLink\n          activeOnlyWhenExact={true}\n          to=\"/swap\"\n          icon={swap}\n          text={\"Swap\"}\n        />\n        <CustomLink\n          activeOnlyWhenExact={true}\n          to=\"/chart\"\n          icon={Dashboard}\n          text={\"Live Charts\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(Sidebar);\n\nfunction CustomLink({\n  children,\n  icon,\n  text,\n  to,\n  activeOnlyWhenExact,\n  ...props\n}) {\n  let resolved = useResolvedPath(to);\n  let match = useMatch({ path: resolved.pathname, end: true });\n  return (\n    <div className=\"w-full pr-5\">\n      <Link\n        className={`${\n          match && \"bg-dark-500\"\n        } hover:bg-dark-500 text-left text-base  py-2 px-4 rounded-r-full flex items-center mb-3 transition-all`}\n        to={to}\n        {...props}\n      >\n        <span className=\"bg-dark-300 mr-3 w-8 h-8 flex justify-center items-center rounded-full  text-indigo flex-shrink-0\">\n          <img src={icon} alt=\"\" className=\"w-5\" />\n        </span>\n        <span>{text}</span>\n      </Link>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bnb.1a02febd.png\";","export default __webpack_public_path__ + \"static/media/usdt.369fc36b.png\";","export default __webpack_public_path__ + \"static/media/eth.a85b6de0.png\";","export default __webpack_public_path__ + \"static/media/user.d0e745e4.png\";","export default __webpack_public_path__ + \"static/media/user2.590d81bb.png\";","export default __webpack_public_path__ + \"static/media/wallet.110d5cc2.png\";","export default __webpack_public_path__ + \"static/media/key.ad2177f0.png\";","export default __webpack_public_path__ + \"static/media/key2.3b297ed5.png\";","export const SIGNUP = \"SIGNUP\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";","\nimport Web3 from \"web3\"\n\nexport const getUserBalance = async () => {\n    try {\n        const web3 = await getWeb3();\n        const accountAddress = await getAccount()\n        let balance = await web3.eth.getBalance(accountAddress)\n        // balance = new BigNumber(balance).div(new BigNumber(10).exponentiatedBy(18))\n        return balance\n    }\n    catch (err) {\n        console.log(\"error\", err)\n        return 0;\n    }\n}\n\nexport const getWeb3 = async () => {\n    try {\n        console.log(Web3.givenProvider)\n        const web3 = new Web3(Web3.givenProvider);\n        return web3;\n    }\n    catch (err) {\n        console.log(\"error\", err)\n    }\n}\n\nexport const getAccount = async () => {\n    try {\n        const web3 = await getWeb3()\n        const accountAddress = await web3.eth.getAccounts()\n        return accountAddress[0]\n    }\n    catch (err) {\n        console.log(\"error\", err)\n    }\n}\n\nexport const createAccount = async () => {\n    const web3 = await getWeb3();\n    const account = web3.eth.accounts.create();\n    return account;\n}","import React, { useState, useEffect } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport User from \"../../assets/images/user.png\";\nimport User2 from \"../../assets/images/user2.png\";\nimport Wallet from \"../../assets/images/wallet.png\";\nimport Key from \"../../assets/images/key.png\";\nimport Key2 from \"../../assets/images/key2.png\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { logout } from \"../../redux/auth/auth-action\";\n\nconst Index = ({ children, show, setShow, dispatch }) => {\n    const navigator = useNavigate();\n\n    const [showPopup, setShowPopup] = useState(false);\n    const [userDetails, setUserDetails] = useState({\n        fullName: \"\",\n        privateKey: \"\",\n        walletKey: \"\",\n    });\n    const [privateKeys, setPrivateKey] = useState({\n        userPrivateKey: \"Click here to see private key\",\n    });\n    const store = useStore();\n    const state = store.getState();\n    useEffect(() => {\n        const userData = JSON.parse(localStorage.getItem(\"user-data\"));\n        if (userData) {\n            setUserDetails({\n                fullName: userData.fullName,\n                privateKey: userData.jwtToken,\n                walletKey: userData.wallet,\n            });\n        } else {\n            navigator(\"/login/\");\n        }\n    }, [store]);\n\n    const onLogout = () => {\n        dispatch(logout());\n        navigator(\"/login\");\n    };\n\n    return (\n        <>\n            <div className=\"flex-1 bg-black mb-10\">\n                <div className=\"px-4 bg-dark-400 py-4 flex text-white justify-between lg:justify-end sticky top-0 z-10\">\n                    <button\n                        className=\"lg:hidden\"\n                        onClick={() => setShow((prev) => !prev)}\n                    >\n                        <GiHamburgerMenu />\n                    </button>\n                    <button\n                        className=\"border border-success-500 py-2 px-4 profile-button\"\n                        onClick={() => setShowPopup(!showPopup)}\n                    >\n                        <img src={User} width={\"100%\"} />\n                        <span>{userDetails.fullName}</span>\n                    </button>\n                    {showPopup && (\n                        <div className=\"profile-popup\">\n                            <div className=\"section\">\n                                <img src={User2} />\n                                <p>{userDetails.fullName}</p>\n                            </div>\n                            <div className=\"section\">\n                                <img src={Wallet} />\n                                <p>0.00 USD</p>\n                            </div>\n                            <div className=\"section\">\n                                <img src={Key} />\n                                <a\n                                    className=\"break-all\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        if (userDetails.privateKey) {\n                                            setPrivateKey({\n                                                ...privateKeys,\n                                                userPrivateKey:\n                                                    userDetails.privateKey,\n                                            });\n                                        } else {\n                                            setPrivateKey(\n                                                \"Can't access privatekey\"\n                                            );\n                                        }\n                                    }}\n                                >\n                                    {privateKeys.userPrivateKey}\n                                </a>\n                            </div>\n                            <div className=\"section\">\n                                <img src={Key2} />\n                                <p tool className=\"break-all\">\n                                    {userDetails.walletKey}\n                                </p>\n                            </div>\n                            <div className=\"section\">\n                                <p onClick={onLogout}>Logout</p>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                {children}\n            </div>\n        </>\n    );\n};\n\nexport default connect()(Index);\n","import {\n    SIGNUP_ERROR,\n    SIGNUP_SUCCESS,\n    SIGNUP,\n    LOGIN_SUCCESS,\n    LOGOUT\n  } from \"./auth-type\";\nimport axios from \"axios\";\nimport { createAccount } from \"../../utils/currentWallet.utility\";\n  \nexport const signUp = (data) => (dispatch) => {\n    dispatch({ type: SIGNUP })\n    console.log(data)\n    axios.post(`${process.env.REACT_APP_API_URL}/register`, data)\n        .then(async res => {\n            dispatch({type: SIGNUP_SUCCESS, payload: res.data});\n        })\n        .catch(err=>{\n            const errMsg = err.response?.data?.message;\n            dispatch({type: SIGNUP_ERROR, payload: 'Email already exists'});\n        })\n}\n\nexport const login = (data) => (dispatch) => {\n    dispatch({ type: SIGNUP })\n    // axios.post(`${process.env.REACT_APP_API_URL}/authenticate`, data)\n        axios.post(`${process.env.REACT_APP_API_URL}authenticate`, data)\n        .then(async res=>{\n            localStorage.setItem('sessionId', res.data.jwtToken);\n            localStorage.setItem('user-data', JSON.stringify(res.data));\n            console.log(\"This is before creating wallet in login process and repsonse from api is\", res.data)\n            if (!res.data.wallet) {\n                const account = await createAccount();\n                axios.put(`${process.env.REACT_APP_API_URL}/${res.data.id}`, {wallet: account.address, privateKey: account.privateKey}, {headers: {Authorization: `Bearer ${localStorage.getItem('sessionId')}`}})\n                    .then(res => {\n                        var userData = JSON.parse(localStorage.getItem(\"user-data\"));\n                        userData.wallet = res.data.wallet;\n                        userData.privateKey = res.data.privateKey;\n                        localStorage.setItem('user-data', JSON.stringify(userData));\n\n                        console.log(\"Before loggin in, creating new wallet and userData is\", userData)\n\n                        dispatch({type: LOGIN_SUCCESS, payload: res.data});\n                    })\n                    .catch(err => {\n                        const errMsg = err.response?.data?.message;\n                        dispatch({type: SIGNUP_ERROR, payload: errMsg ? errMsg : 'Internal server error'});\n                    })\n            } else {\n                dispatch({type: LOGIN_SUCCESS, payload: res.data});\n            }\n            \n        })\n        .catch(err=>{\n            const errMsg = err.response?.data?.message;\n            dispatch({type: SIGNUP_ERROR, payload: errMsg ? errMsg : 'Internal server error'});\n        })\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('user-data');\n    localStorage.removeItem('sessionId');\n    dispatch({ type: LOGOUT })\n}","import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport Avtar from \"../../assets/images/avtar.png\";\nimport Bnb from \"../../assets/images/bnb.png\";\nimport Usdt from \"../../assets/images/usdt.png\";\nimport Eth from \"../../assets/images/eth.png\";\nimport Layout from \"../layout\";\nimport axios from \"axios\";\nimport USDT from \"./tokenabi/USDT.json\";\nimport BNB from \"./tokenabi/BNB.json\";\nimport AVATAR from \"./tokenabi/AVATAR.json\";\nimport ETH from \"./tokenabi/ETH.json\";\n\nconst Web3 = require(\"web3\");\nconst rpcURL = \"https://bsc-dataseed.binance.org/\";\n//const rpcURL = \"https://data-seed-prebsc-1-s1.binance.org:8545/\";\nconst web3 = new Web3(rpcURL);\n\nconst Panel = ({ show, setShow }) => {\n  const [USDTbalance, setUSDTBalance] = useState(0);\n  const [BNBbalance, setBNBBalance] = useState(0);\n  const [ETHbalance, setETHBalance] = useState(0);\n  const [AVATARbalance, setAVATARBalance] = useState(0);\n\n  const [walletid, setWalletid] = useState();\n\n  const [USDTContract, setUSDTContract] = useState();\n  const [BNBContract, setBNBContract] = useState();\n  const [ETHContract, setETHContract] = useState();\n  const [AVATARContract, setAVATARContract] = useState();\n\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  async function getUSDTBalance() {\n    let USDTbalance = await USDTContract.methods.balanceOf(walletid).call();\n    setUSDTBalance(USDTbalance / 1000000000000000000);\n    return USDTbalance;\n  }\n  // async function getUSDTBalance() {\n  //   let USDTbalance =  await web3.eth.getBalance(walletid);\n  //   setUSDTBalance((USDTbalance)/1000000000000000000);\n  //   return USDTbalance;\n  // }\n\n  async function getBNBBalance() {\n    // let BNBbalance = await BNBContract.methods.balanceOf(walletAddress).call();\n    let BNBbalance = await web3.eth.getBalance(walletid);\n    setBNBBalance(BNBbalance / 1000000000000000000);\n    return BNBbalance;\n  }\n  async function getETHBalance() {\n    let ETHbalance = await ETHContract.methods.balanceOf(walletid).call();\n    //setETHBalance(ETHbalance);\n    setETHBalance(ETHbalance / 1000000000000000000);\n\n    return ETHbalance;\n  }\n  async function getAVATARBalance() {\n    let AVATARbalance = await AVATARContract.methods.balanceOf(walletid).call();\n    setAVATARBalance(AVATARbalance / 1000000000000000000);\n    return AVATARbalance;\n  }\n\n  useEffect(() => {\n    if (\n      walletid &&\n      USDTContract &&\n      BNBContract &&\n      ETHContract &&\n      AVATARContract\n    ) {\n      getUSDTBalance();\n      getBNBBalance();\n      getETHBalance();\n      getAVATARBalance();\n    }\n  }, [walletid, USDTContract, BNBContract, ETHContract, AVATARContract]);\n\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"user-data\"));\n    // const walletid = userData?.wallet\n    console.log(\"From main pannel and here userData is \", userData);\n    setWalletid(web3.utils.toChecksumAddress(userData?.wallet));\n\n    // USDTtoken\n    let USDTtokenAddress = USDT.address;\n    let USDTtokenABI = USDT.abi;\n    setUSDTContract(new web3.eth.Contract(USDTtokenABI, USDTtokenAddress));\n    // BNBtoken\n    let BNBtokenAddress = BNB.address;\n    let BNBtokenABI = BNB.abi;\n    setBNBContract(new web3.eth.Contract(BNBtokenABI, BNBtokenAddress));\n    // ETHtoken\n    let ETHtokenAddress = ETH.address;\n    let ETHtokenABI = ETH.abi;\n    setETHContract(new web3.eth.Contract(ETHtokenABI, ETHtokenAddress));\n    // AVATARtoken\n    let AVATARtokenAddress = AVATAR.address;\n    let AVATARtokenABI = AVATAR.abi;\n    setAVATARContract(\n      new web3.eth.Contract(AVATARtokenABI, AVATARtokenAddress)\n    );\n  }, []);\n\n  useEffect(() => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"sessionId\"),\n      },\n    };\n    axios\n      .get(`http://localhost:3001/transactions/get`, config)\n      .then(async (res) => {\n        console.log(res);\n        setTransactions(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        const errMsg = err.response?.data?.message;\n        setError(errMsg);\n      });\n  }, []);\n\n  return (\n    <>\n      <Layout show={show} setShow={setShow}>\n        <div className=\"grid grid-cols-1  sm:grid-cols-2 xl:grid-cols-4 gap-8 mx-10 mt-10 \">\n          <div className=\"coins\">\n            <div className=\"details\">\n              <span className=\"price\">{AVATARbalance.toFixed(2)}</span>\n              <br />\n              <span className=\"name\">AVTAR</span>\n            </div>\n            <img src={Avtar} />\n          </div>\n\n          <div className=\"coins\">\n            <div className=\"details\">\n              <span className=\"price\">{ETHbalance.toFixed(2)}</span>\n              <br />\n              <span className=\"name\">ETH</span>\n            </div>\n            <img src={Eth} />\n          </div>\n          <div className=\"coins\">\n            <div className=\"details\">\n              <span className=\"price\">{BNBbalance.toFixed(2)}</span>\n              <br />\n              <span className=\"name\">BNB</span>\n            </div>\n            <img src={Bnb} />\n          </div>\n          <div className=\"coins\">\n            <div className=\"details\">\n              <span className=\"price\">{USDTbalance.toFixed(2)}</span>\n              <br />\n              <span className=\"name\">USDT</span>\n            </div>\n            <img src={Usdt} />\n          </div>\n        </div>\n        <div className=\"mx-10 mt-10 recent-transactions\">\n          <p>Recent Transcations</p>\n          <table>\n            <thead>\n              <tr>\n                <th>User ID</th>\n                <th>From Address</th>\n                <th>To Address</th>\n                <th>Amount</th>\n                <th>Currency</th>\n                <th>Date & Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transactions.length ? (\n                transactions.map((transaction, index) => (\n                  <tr>\n                    <td>{transaction.userID}</td>\n                    <td>{transaction.from}</td>\n                    <td>{transaction.to}</td>\n                    <td>{transaction.amount}</td>\n                    <td>{transaction.currency}</td>\n                    <td>\n                      {new Date(transaction.date).toLocaleDateString()} <br />\n                      {new Date(transaction.date).toLocaleTimeString()}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <></>\n              )}\n            </tbody>\n          </table>\n\n          {!transactions.length && !error && (\n            <div\n              className=\" text-blue-300 px-4 py-3 mt-3 text-center text-2xl\"\n              role=\"alert\"\n            >\n              <span className=\"block sm:inline\">\n                No transactions to display\n              </span>\n            </div>\n          )}\n\n          {error && (\n            <div\n              className=\" text-red-300 px-4 py-3 mt-3 text-center text-2xl\"\n              role=\"alert\"\n            >\n              <span className=\"block sm:inline\">{error}</span>\n            </div>\n          )}\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default Panel;\n","import { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport Panel from \"../components/mainPanel\";\nconst Home = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"flex relative bg-black\">\n      <Sidebar show={show} setShow={setShow} />\n      <Panel show={show} setShow={setShow} />\n    </div>\n  );\n};\n\nexport default Home;\n","import { Field } from 'formik';\n\nconst CustomInput = (props) => {\n  const { type = 'text', name, error } = props;\n  return (\n    <div className={`custom-input mb-4 ${error ? 'invalid' : ''}`}>\n      <Field id={name} type={type} {...props}/>\n    </div>\n  )\n};\n\nexport default CustomInput;\n","export default __webpack_public_path__ + \"static/media/shield.dc206ad4.png\";","import \"./style.css\";\nimport CustomInput from \"../../components/customInput\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { login } from \"../../redux/auth/auth-action\";\nimport { useState, useEffect } from \"react\";\nimport shield from \"../../assets/images/shield.png\";\n\nconst Login = (props) => {\n    const { auth } = props;\n\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    useEffect(() => {\n        setLoggedIn(auth.loggedIn);\n    }, [auth?.loggedIn]);\n\n    const LoginSchema = Yup.object().shape({\n        email: Yup.string()\n            .email(\"Email is invalid\")\n            .required(\"Email is required\")\n            .min(5, \"Minimum 5 characters\")\n            .max(50, \"Maximum 50 characters\"),\n        password: Yup.string()\n            .required(\"Password is required\")\n            .matches(\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,25}$/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n            ),\n    });\n\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const onSubmit = (fields) => {\n        props.dispatch(login(fields));\n    };\n\n    if (loggedIn) {\n        return <Navigate replace to=\"/\" />;\n    } else {\n        return (\n            <div className=\"bg-black h-full w-full min-h-screen flex justify-center items-center text-white p-5\">\n                <div className=\"form-container rounded-3xl\">\n                    <div className=\"form-left p-5 sm:p-10\">\n                        <img src={shield} alt=\"shield\" className=\"mb-12\" />\n                        <h2 className=\"text-white-100 mb-8 text-4xl font-bold\">\n                            Avtar Wallet\n                        </h2>\n                        <p className=\"text-gray-300 text-xl\">\n                            Avtar is a secure and easy to\n                        </p>\n                        <p className=\"text-gray-300 mb-8 text-xl\">\n                            Use crypto wallet. Store, send <br/>\n                            receive your crypto assets<br/>\n                            with ease.\n                        </p>\n                    \n                        <p className=\"text-gray-300 mb-8 text-x0.8\">\n                            www.avtarexchange.com\n                        </p>\n                    </div>\n                    <Formik\n                        enableReinitialize={true}\n                        initialValues={initialValues}\n                        validationSchema={LoginSchema}\n                        onSubmit={onSubmit}\n                    >\n                        {({ errors, values, touched, setValues, isValid }) => (\n                            <Form className=\"bg-dark-400 p-5 sm:p-10 rounded-3xl h-full\">\n                                {auth.error && (\n                                    <div\n                                        className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n                                        role=\"alert\"\n                                    >\n                                        <span className=\"block sm:inline\">\n                                            {auth.error}\n                                        </span>\n                                    </div>\n                                )}\n                                <h1 className=\"mt-10 font-bold  text-xl text-center sm:text-left\">\n                                    Welcome to Avtar wallet\n                                </h1>\n                                <p className=\"mt-1 mb-10 text-center sm:text-left\">\n                                    Sign in to start\n                                </p>\n\n                                <CustomInput\n                                    placeholder={\"Email \"}\n                                    name=\"email\"\n                                    className=\"focus:outline-none\"\n                                    error={\n                                        errors.email && touched.email ? 1 : 0\n                                    }\n                                />\n                                <CustomInput\n                                    type=\"password\"\n                                    placeholder={\"Password\"}\n                                    name=\"password\"\n                                    className=\"focus:outline-none\"\n                                    error={\n                                        errors.password && touched.password\n                                            ? 1\n                                            : 0\n                                    }\n                                />\n                                <div className=\"flex items-center  justify-end mb-4 mt-7\">\n                                    {/* <div className=\"flex items-center\">\n                    <input type=\"checkbox\" />\n                    <label for=\"fruit2\"></label>\n                  </div> */}\n                                    <a\n                                        href=\"/forgot\"\n                                        className=\" underline text-sm text-gray-400\"\n                                    >\n                                        {/* Forgot Password? */}\n                                    </a>\n                                </div>\n                                <button className=\" bg-blue-600 w-full py-3 rounded\">\n                                    SIGN IN\n                                </button>\n                                <p className=\"text-sm text-center mt-3\">\n                                    Don't have an account?{\" \"}\n                                    <Link\n                                        to=\"/signup\"\n                                        className=\" text-blue-600 underline\"\n                                    >\n                                        Create One\n                                    </Link>\n                                </p>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth,\n    };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import \"./style.css\";\nimport CustomInput from \"../../components/customInput\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { signUp } from \"../../redux/auth/auth-action\";\nimport { useEffect, useState } from \"react\";\n\nconst SignUp = (props) => {\n    const { auth } = props;\n\n    const [registered, setRegistered] = useState(false);\n\n    useEffect(() => {\n        setRegistered(auth.registered);\n    }, [auth?.registered]);\n\n    const SignUpSchema = Yup.object().shape({\n        fullName: Yup.string()\n            .required(\"Name is required\")\n            .min(5, \"Minimum 5 characters\")\n            .max(50, \"Maximum 50 characters\"),\n        email: Yup.string()\n            .email(\"Email is invalid\")\n            .required(\"Email is required\")\n            .min(5, \"Minimum 5 characters\")\n            .max(200, \"Maximum 200 characters\"),\n        password: Yup.string()\n            .required(\"Password is required\")\n            .matches(\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,25}$/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n            ),\n    });\n\n    const initialValues = {\n        fullName: \"\",\n        email: \"\",\n        password: \"\",\n    };\n\n    const onSubmit = (fields) => {\n        fields.confirmPassword = fields.password;\n        props.dispatch(signUp(fields));\n    };\n\n    return (\n        <div className=\"bg-black h-full w-full min-h-screen flex justify-center items-center text-white\">\n            <div className=\"max-w-md w-full bg-dark-400 py-10 px-10\">\n                <Formik\n                    enableReinitialize={true}\n                    initialValues={initialValues}\n                    validationSchema={SignUpSchema}\n                    onSubmit={onSubmit}\n                >\n                    {({ errors, values, touched, setValues, isValid }) => (\n                        <Form>\n                            {auth.error && (\n                                <div\n                                    className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\n                                    role=\"alert\"\n                                >\n                                    <span className=\"block sm:inline\">\n                                        {auth.error}\n                                    </span>\n                                </div>\n                            )}\n\n                            {auth.registered && (\n                                <div className=\"rounded p-3 sm:p-2 border-2 border-green-600 bg-green-300 mb-5\">\n                                    <p className=\"text-green-600\">\n                                        Check your email. We have sent a\n                                        verification link on your email\n                                    </p>\n                                </div>\n                            )}\n\n                            <h1 className=\"mt-10 font-bold  text-xl\">\n                                New here?\n                            </h1>\n                            <p className=\"mt-1 mb-10 \">\n                                Signing up is easy. It only takes a few steps\n                            </p>\n\n                            <CustomInput\n                                placeholder={\"Username\"}\n                                name=\"fullName\"\n                                className=\"focus:outline-none\"\n                                error={\n                                    errors.fullName && touched.fullName ? 1 : 0\n                                }\n                            />\n                            <CustomInput\n                                placeholder={\"Email\"}\n                                name=\"email\"\n                                className=\"focus:outline-none\"\n                                error={errors.email && touched.email ? 1 : 0}\n                            />\n                            <CustomInput\n                                type=\"password\"\n                                placeholder={\"Password\"}\n                                name=\"password\"\n                                className=\"focus:outline-none\"\n                                error={\n                                    errors.password && touched.password ? 1 : 0\n                                }\n                            />\n                            <div className=\"flex items-center justify-end mb-4 mt-7\">\n                                {/* <div className=\"flex items-center\">\n                <input type=\"checkbox\" />\n                <label for=\"fruit2\"></label>\n              </div> */}\n                                <a\n                                    href=\"/forgot\"\n                                    className=\" underline text-sm text-gray-400\"\n                                >\n                                    Forgot Password?\n                                </a>\n                            </div>\n                            <button\n                                className=\" bg-blue-600 w-full py-3 rounded\"\n                                type=\"submit\"\n                            >\n                                SIGN UP\n                            </button>\n                            <p className=\"text-sm text-center mt-3\">\n                                Already have an account? {\"\"}\n                                <Link\n                                    to=\"/login\"\n                                    className=\" text-blue-600 underline\"\n                                >\n                                    Login\n                                </Link>\n                            </p>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth,\n    };\n};\n\nexport default connect(mapStateToProps)(SignUp);\n","import \"./login/style.css\";\r\nimport axios from \"axios\";\r\nimport CustomInput from \"../components/customInput\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useState, useEffect } from \"react\";\r\nimport shield from \"../assets/images/shield.png\";\r\n\r\nconst Login = (props) => {\r\n    const { auth } = props;\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [otpSent, setOtpSent] = useState(false);\r\n\r\n    const modalStyles = {\r\n        backgroundColor: \"rgba(0,0,0,0.4)\",\r\n        backdropFilter: \"blur(10px)\",\r\n        pointerEvents: otpSent ? \"auto\" : \"none\",\r\n        opacity: otpSent ? 1 : 0,\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoggedIn(auth.loggedIn);\r\n    }, [auth?.loggedIn]);\r\n\r\n    const ResetSchema = Yup.object().shape({\r\n        email: Yup.string().required(\"Email is required\"),\r\n    });\r\n\r\n    const initialValues = {\r\n        email: \"\",\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        setError(\"\");\r\n        console.log(data);\r\n        axios\r\n            .post(`${process.env.REACT_APP_API_URL}forgot-password`, data)\r\n            .then(async (res) => {\r\n                setOtpSent(true);\r\n                setMsg(res.data.message);\r\n            })\r\n            .catch(() => {\r\n                setError(\"Some error occurred!\");\r\n            });\r\n    };\r\n\r\n    if (loggedIn) {\r\n        return <Navigate replace to=\"/\" />;\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"bg-black h-full w-full min-h-screen flex justify-center items-center text-white p-5\">\r\n                    <div className=\"form-container rounded-3xl\">\r\n                        <div className=\"form-left p-5 sm:p-10\">\r\n                            <img src={shield} alt=\"shield\" className=\"mb-12\" />\r\n                            <h2 className=\"text-gray-100 mb-8 text-4xl font-bold\">\r\n                                Avtar Wallet\r\n                            </h2>\r\n                            <p className=\"text-gray-300 text-xl\">\r\n                                Avtar is secure and easy to\r\n                            </p>\r\n                            <p className=\"text-gray-300 mb-8 text-xl\">\r\n                                Use crypto wallet.\r\n                            </p>\r\n                            <p className=\"text-gray-300 mb-8 italic text-2xl\">\r\n                                Store, Transfer, Receive.\r\n                            </p>\r\n                        </div>\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={initialValues}\r\n                            validationSchema={ResetSchema}\r\n                            onSubmit={onSubmit}\r\n                        >\r\n                            {({\r\n                                errors,\r\n                                values,\r\n                                touched,\r\n                                setValues,\r\n                                isValid,\r\n                            }) => (\r\n                                <Form className=\"bg-dark-400 p-5 sm:p-10 rounded-3xl h-full\">\r\n                                    {error && (\r\n                                        <div\r\n                                            className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\r\n                                            role=\"alert\"\r\n                                        >\r\n                                            <span className=\"block sm:inline\">\r\n                                                {error}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                    {msg && (\r\n                                        <div\r\n                                            className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative\"\r\n                                            role=\"alert\"\r\n                                        >\r\n                                            <span className=\"block sm:inline\">\r\n                                                {msg}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                    <h1 className=\"mt-10 font-bold  text-xl text-center sm:text-left\">\r\n                                        Welcome to Avtar wallet\r\n                                    </h1>\r\n                                    <p className=\"mt-1 mb-10 text-center sm:text-left\">\r\n                                        Resest password\r\n                                    </p>\r\n                                    <CustomInput\r\n                                        placeholder={\"Email\"}\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        className=\"focus:outline-none\"\r\n                                        error={\r\n                                            errors.email && touched.email\r\n                                                ? 1\r\n                                                : 0\r\n                                        }\r\n                                    />\r\n                                    <div className=\"flex items-center  justify-end mb-4 mt-7\">\r\n                                        <a\r\n                                            href=\"/login\"\r\n                                            className=\" underline text-sm text-gray-400\"\r\n                                        >\r\n                                            Login instead?\r\n                                        </a>\r\n                                    </div>\r\n                                    <button className=\" bg-blue-600 w-full py-3 rounded\">\r\n                                        Request OTP\r\n                                    </button>\r\n                                    <p className=\"text-sm text-center mt-3\">\r\n                                        Don't have an account?\r\n                                        <Link\r\n                                            to=\"/signup\"\r\n                                            className=\" text-blue-600 underline\"\r\n                                        >\r\n                                            Create One\r\n                                        </Link>\r\n                                    </p>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"w-full h-screen fixed top-0 left-0 flex justify-center items-center p-10\"\r\n                    style={modalStyles}\r\n                >\r\n                    <div className=\"p-10 rounded-lg bg-dark-400 max-w-full max-h-full overflow-y-auto relative text-center\">\r\n                        <h2 className=\"text-gray-100 bold text-xl\">{msg}</h2>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import \"./login/style.css\";\r\nimport axios from \"axios\";\r\nimport CustomInput from \"../components/customInput\";\r\nimport { Link, Navigate, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useState, useEffect } from \"react\";\r\nimport shield from \"../assets/images/shield.png\";\r\n\r\nconst ResetPass = (props) => {\r\n    const { auth } = props;\r\n\r\n    const search = useLocation().search;\r\n    const [token] = useState(new URLSearchParams(search).get(\"token\"));\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [passReset, setPassReset] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const modalStyles = {\r\n        backgroundColor: \"rgba(0,0,0,0.4)\",\r\n        backdropFilter: \"blur(10px)\",\r\n        pointerEvents: passReset ? \"auto\" : \"none\",\r\n        opacity: passReset ? 1 : 0,\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoggedIn(auth.loggedIn);\r\n    }, [auth?.loggedIn]);\r\n\r\n    const ResetSchema = Yup.object().shape({\r\n        token: Yup.string().required(\"Token required\"),\r\n        password: Yup.string()\r\n            .required(\"Password is required\")\r\n            .matches(\r\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,25}$/,\r\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n            ),\r\n        confirmPassword: Yup.string()\r\n            .required(\"Password is required\")\r\n            .matches(\r\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,25}$/,\r\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n            ),\r\n    });\r\n\r\n    const initialValues = {\r\n        token: token,\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        setError(\"\");\r\n        axios\r\n            .post(`${process.env.REACT_APP_API_URL}reset-password`, data)\r\n            .then(async (res) => {\r\n                setPassReset(true);\r\n            })\r\n            .catch((err) => {\r\n                setError(\"Invalid Token\");\r\n            });\r\n    };\r\n\r\n    if (loggedIn) {\r\n        return <Navigate replace to=\"/\" />;\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"bg-black h-full w-full min-h-screen flex justify-center items-center text-white p-5\">\r\n                    <div className=\"form-container rounded-3xl\">\r\n                        <div className=\"form-left p-5 sm:p-10\">\r\n                            <img src={shield} alt=\"shield\" className=\"mb-12\" />\r\n                            <h2 className=\"text-gray-100 mb-8 text-4xl font-bold\">\r\n                                Avtar Wallet\r\n                            </h2>\r\n                            <p className=\"text-gray-300 text-xl\">\r\n                                Avtar is secure and easy to\r\n                            </p>\r\n                            <p className=\"text-gray-300 mb-8 text-xl\">\r\n                                Use crypto wallet.\r\n                            </p>\r\n                            <p className=\"text-gray-300 mb-8 italic text-2xl\">\r\n                                Store, Transfer, Receive.\r\n                            </p>\r\n                        </div>\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={initialValues}\r\n                            validationSchema={ResetSchema}\r\n                            onSubmit={onSubmit}\r\n                        >\r\n                            {({\r\n                                errors,\r\n                                values,\r\n                                touched,\r\n                                setValues,\r\n                                isValid,\r\n                            }) => (\r\n                                <Form className=\"bg-dark-400 p-5 sm:p-10 rounded-3xl h-full\">\r\n                                    {error && (\r\n                                        <div\r\n                                            className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\r\n                                            role=\"alert\"\r\n                                        >\r\n                                            <span className=\"block sm:inline\">\r\n                                                {error}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                    <h1 className=\"mt-10 font-bold  text-xl text-center sm:text-left\">\r\n                                        Welcome to Avtar wallet\r\n                                    </h1>\r\n                                    <p className=\"mt-1 mb-10 text-center sm:text-left\">\r\n                                        Resest password\r\n                                    </p>\r\n\r\n                                    <CustomInput\r\n                                        placeholder={\"Password\"}\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        className=\"focus:outline-none\"\r\n                                        error={\r\n                                            errors.password && touched.password\r\n                                                ? 1\r\n                                                : 0\r\n                                        }\r\n                                    />\r\n                                    <CustomInput\r\n                                        type=\"password\"\r\n                                        placeholder={\"Confirm Password\"}\r\n                                        name=\"confirmPassword\"\r\n                                        className=\"focus:outline-none\"\r\n                                        error={\r\n                                            errors.confirmPassword &&\r\n                                            touched.confirmPassword\r\n                                                ? 1\r\n                                                : 0\r\n                                        }\r\n                                    />\r\n\r\n                                    <div className=\"flex items-center  justify-end mb-4 mt-7\">\r\n                                        <a\r\n                                            href=\"/login\"\r\n                                            className=\" underline text-sm text-gray-400\"\r\n                                        >\r\n                                            Login instead?\r\n                                        </a>\r\n                                    </div>\r\n                                    <button className=\" bg-blue-600 w-full py-3 rounded\">\r\n                                        Reset\r\n                                    </button>\r\n                                    <p className=\"text-sm text-center mt-3\">\r\n                                        Don't have an account?\r\n                                        <Link\r\n                                            to=\"/signup\"\r\n                                            className=\" text-blue-600 underline\"\r\n                                        >\r\n                                            Create One\r\n                                        </Link>\r\n                                    </p>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"w-full h-screen fixed top-0 left-0 flex justify-center items-center p-10\"\r\n                    style={modalStyles}\r\n                >\r\n                    <div className=\"p-10 rounded-lg bg-dark-400 max-w-full max-h-full overflow-y-auto relative text-center\">\r\n                        <h2 className=\"text-gray-100 bold text-xl mb-10\">\r\n                            Password changed successfully!\r\n                        </h2>\r\n                        <Link\r\n                            to=\"/login\"\r\n                            className=\"bg-blue-600 w-full p-3 rounded text-gray-200\"\r\n                        >\r\n                            Go to Login Page\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ResetPass);\r\n","import \"./style.css\";\nimport Logo from \"../../assets/images/avtar.png\";\n\nconst TransactionModal = ({\n    open,\n    setOpen,\n    title = \"Awaiting approval..\",\n    subTitle = \"Please be patient till the transaction completes\",\n    refresh = true,\n    button = true,\n}) => {\n    return (\n        <div\n            className={`custom-modal approval   ${\n                open ? \"active\" : \"\"\n            } font-poppins`}\n        >\n            <div className=\"custom-modal-content-wrapper\">\n                <div className=\"container\">\n                    <div className=\"custom-modal-wrapper text-center\">\n                        <div className=\"mb-2 text-start\">\n                            <img src={Logo} alt=\"\" className=\"w-10 logo_icon\" />\n                        </div>\n                        <h1 className=\"font-semibold text-dark mb-2\">\n                            {title}\n                        </h1>\n                        <p className=\"text-lg text-grey md:mx-20 mb-4  font-medium\">\n                            {subTitle}\n                        </p>\n                        {refresh && (\n                            <p className=\"text-grey text-sm font-normal mb-4 font-12\">\n                                ( Do not close the tab or refresh the page )\n                            </p>\n                        )}\n                        {button && (\n                            <div className=\"inform-btn\">\n                                <button\n                                    className=\"py-2.5 px-12 ok_btn rounded-full bg-blue-500\"\n                                    onClick={() => setOpen(false)}\n                                >\n                                    Ok\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionModal;\n","import { useState, useEffect } from \"react\";\nimport { FaArrowDown } from \"react-icons/fa\";\nimport Avatar from \"../../assets/images/avtar.png\";\nimport BNB from \"../../assets/images/bnb.png\";\nimport Layout from \"../layout\";\nimport axios from \"axios\";\nimport CONFIG from \"./config.json\";\nimport TransactionModal from \"../modals/TransactionModal\";\n// import AVATAR from \"../mainPanel/tokenabi/AVATAR.json\";\nimport AVATAR from \"./testnetAvatar.json\";\nconst coins = [\n  {\n    id: 0,\n    name: \"Avatar\",\n    image: Avatar,\n    shortName: \"Avatar\",\n  },\n  {\n    id: 1,\n    name: \"BNB\",\n    image: BNB,\n    shortName: \"BNB\",\n  },\n];\n\nconst Web3 = require(\"web3\");\nconst rpcURL = \"https://bsc-dataseed.binance.org/\";\n//const rpcURL = \"https://data-seed-prebsc-1-s1.binance.org:8545/\";\nconst web3 = new Web3(rpcURL);\nlet AVATARtokenAddress = CONFIG.address;\nlet AVATARtokenABI = CONFIG.abi;\nconst BASEPRICE = 200;\nconst Panel = ({ show, setShow }) => {\n  const [approvalModal, setApprovalModal] = useState(false);\n  const [successModal, setSuccessModal] = useState(false);\n  const [errorModal, setErrorModal] = useState(false);\n\n  const [selected, setSelected] = useState(coins[0]);\n  const [selected2, setSelected2] = useState(coins[1]);\n  const [active, setActive] = useState(false);\n  const [active2, setActive2] = useState(false);\n  const [avatarPrice, setAvatarPrice] = useState({});\n  const [avatarValue, setAvatarValue] = useState(\"\");\n  const [bnbValue, setBnbValue] = useState(\"\");\n  const [txId, setTxId] = useState(\"\");\n  const reg = /^\\d*\\.?\\d*$/;\n  const avatarInputHandler = (e) => {\n    if (reg.test(e.target.value)) {\n      setAvatarValue(e.target.value);\n      setBnbValue(e.target.value / Number(BASEPRICE));\n    }\n  };\n\n  const bnbInputHandler = (e) => {\n    if (reg.test(e.target.value)) {\n      setBnbValue(e.target.value);\n      setAvatarValue(Number(BASEPRICE) * e.target.value);\n      console.log(Number(BASEPRICE) * e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    const getPrice = async () => {\n      const {\n        data: { data },\n      } = await axios.get(\n        \"https://api.pancakeswap.info/api/v2/tokens/0xe4B7a93dFF5F23639698D38415DaCCA820Ff11CA\"\n      );\n      console.log(data);\n      setAvatarPrice(data);\n    };\n    getPrice();\n  }, []);\n\n  const arrOfCoinsAddress = [\n    \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    \"0xe4B7a93dFF5F23639698D38415DaCCA820Ff11CA\",\n  ];\n\n  const swap = async () => {\n    const userData = JSON.parse(localStorage.getItem(\"user-data\"));\n    const contract = await new web3.eth.Contract(\n      AVATARtokenABI,\n      AVATARtokenAddress\n    );\n\n    const avatarContract = await new web3.eth.Contract(\n      AVATAR.abi,\n      AVATAR.address\n    );\n    const acc = await web3.eth.accounts.privateKeyToAccount(\n      userData.privateKey\n    );\n\n    if (avatarContract) {\n      let AVATARbalance = await avatarContract.methods\n        .balanceOf(acc.address)\n        .call();\n\n      console.log(web3.utils.fromWei(AVATARbalance, \"ether\"));\n      console.log(AVATARbalance);\n\n      if (!bnbValue) {\n        alert(\"Invalid amount\");\n        return;\n      }\n      if (Number(web3.utils.fromWei(AVATARbalance, \"ether\")) < avatarValue) {\n        alert(\"you do not have sufficient balance!\");\n        return;\n      }\n      if (contract) {\n        setApprovalModal(true);\n        const amount = await web3.utils.toWei(bnbValue.toString());\n        const amount2 = await web3.utils.toWei(avatarValue.toString());\n\n        const acc = await web3.eth.accounts.privateKeyToAccount(\n          userData.privateKey\n        );\n\n        var count = await web3.eth.getTransactionCount(acc.address, \"latest\");\n        console.log(amount, amount2, acc, count);\n        web3.eth.accounts\n          .signTransaction(\n            {\n              from: acc.address,\n              to: contract._address,\n              value: amount,\n              gas: 300000,\n              data: contract.methods\n                .swapETHForExactTokens(\n                  amount2,\n                  [\n                    \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\",\n                    \"0xb703538C2919778b6e43c02f63d92853f28b8343\",\n                  ],\n                  acc.address,\n                  Math.floor(Date.now() / 1000) + 60 * 10\n                )\n                .encodeABI(),\n              nonce: web3.utils.toHex(count),\n            },\n            userData.privateKey\n          )\n          .then(async (res) => {\n            await web3.eth\n              .sendSignedTransaction(res.rawTransaction)\n              .then((res) => {\n                console.log(res);\n                setTxId(res.transactionHash);\n                console.log(\"HASH\", res.transactionHash);\n              });\n\n            setApprovalModal(false);\n            setSuccessModal(true);\n            // add();\n          })\n          .catch((err) => {\n            console.log(err);\n            setApprovalModal(false);\n            setErrorModal(true);\n          });\n        //   contract.methods.swapETHForExactTokens();\n      }\n    }\n  };\n\n  return (\n    <>\n      <Layout show={show} setShow={setShow}>\n        {txId && (\n          <div\n            className=\"bg-teal-100 border border-cian-400 text-blue-600 px-7 py-3 rounded relative w-11/12 mt-10 m-auto word-break\"\n            role=\"alert\"\n          >\n            <span className=\"block sm:inline\">Transaction Successfull</span>\n            <strong className=\"ml-2 font-bold break-all\">Tx: {txId}</strong>\n            <span\n              className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\n              onClick={() => setTxId(\"\")}\n            >\n              <svg\n                className=\"fill-current h-6 w-6 text-red-500\"\n                role=\"button\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <title>Close</title>\n                <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n              </svg>\n            </span>\n          </div>\n        )}\n        <div className=\" mx-10 mt-10 flex justify-center items-center\">\n          <SwapForm\n            selected={selected}\n            setSelected={setSelected}\n            active={active}\n            setActive={setActive}\n            selected2={selected2}\n            setSelected2={setSelected2}\n            active2={active2}\n            setActive2={setActive2}\n            avatarPrice={avatarPrice}\n            avatarValue={avatarValue}\n            avatarInputHandler={avatarInputHandler}\n            bnbValue={bnbValue}\n            bnbInputHandler={bnbInputHandler}\n            swap={swap}\n          />\n        </div>\n        <TransactionModal\n          open={approvalModal}\n          setOpen={setApprovalModal}\n          button={false}\n        />\n        <TransactionModal\n          open={successModal}\n          setOpen={setSuccessModal}\n          title=\"Success\"\n          subTitle=\"Transaction has been successfully completed\"\n          refresh={false}\n        />\n        <TransactionModal\n          open={errorModal}\n          setOpen={setErrorModal}\n          title=\"Error\"\n          subTitle=\"Make sure you have enough assets in your Avtar wallet\"\n          refresh={false}\n        />\n      </Layout>\n    </>\n  );\n};\n\nexport default Panel;\n\nconst SwapForm = ({\n  selected,\n  selected2,\n  setSelected,\n  setSelected2,\n  active,\n  active2,\n  setActive,\n  setActive2,\n  avatarPrice,\n  avatarValue,\n  avatarInputHandler,\n  bnbValue,\n  bnbInputHandler,\n  swap,\n}) => (\n  <div className=\" max-w-lg p-4 w-full bg-dark-600 rounded-xl text-white\">\n    <form action=\"\" onSubmit={(e) => e.preventDefault()}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"font-bold text-lg\">Swap</h2>\n        <p>\n          <span>Price :</span> <span>{avatarPrice.price}</span>\n        </p>\n      </div>\n      <div className=\"mt-4\">\n        <CustomInput\n          selected={selected}\n          setSelected={setSelected}\n          active={active}\n          setActive={setActive}\n          value={avatarValue}\n          handler={avatarInputHandler}\n        />\n        <div className=\"text-center\">\n          <span className=\"my-4 text-center flex justify-center text-xl\">\n            <FaArrowDown />\n          </span>\n        </div>\n        <CustomInput\n          selected={selected2}\n          setSelected={setSelected2}\n          active={active2}\n          setActive={setActive2}\n          title={\"You Receive\"}\n          value={bnbValue}\n          handler={bnbInputHandler}\n        />\n        <button\n          className=\"customButton block py-3 px-4 w-full mt-4 rounded-xl\"\n          onClick={swap}\n        >\n          Swap\n        </button>\n      </div>\n    </form>\n  </div>\n);\n\nconst CustomInput = ({\n  selected,\n  setSelected,\n  active,\n  setActive,\n  title = \"You Pay\",\n  value,\n  handler,\n}) => (\n  <div>\n    <p className=\"text-sm text-graish\">{title}</p>\n    <div className=\"bg-dark-700  py-2 px-3 rounded-lg mt-1 relative\">\n      <p className=\"text-graish\">{selected.name}</p>\n      <div className=\"flex items-baseline mt-2 flex-col sm:flex-row sm:items-center\">\n        <div\n          className=\"flex items-center cursor-pointer \"\n          //   onClick={() => setActive((prev) => !prev)}\n        >\n          <img src={selected.image} alt=\"\" className=\" w-7\" />\n          <p className=\"font-medium ml-2 text-base\">{selected.shortName}</p>\n        </div>\n        <input\n          type=\"number\"\n          className=\"flex-1 bg-transparent focus:outline-none text-left sm:text-right text-lg\"\n          defaultValue={0}\n          disabled={selected.name === \"BNB\"}\n          value={value}\n          onChange={handler}\n        />\n      </div>\n      {/* <div\n        className={`rounded-md absolute top-full left-0 border-t-0 border-2 border-darKGary w-full shadow-xl bg-gray transition-all duration-300 z-50 ${\n          active\n            ? \" max-h-96 opacity-100\"\n            : \"max-h-0 overflow-y-hidden opacity-0\"\n        }`}\n      >\n        <div className=\"pt-4 p-2\">\n          {coins.map((coin, i) => (\n            <div\n              className=\"mb-4 flex justify-between items-center hover:bg-dark-600 p-2 cursor-pointer rounded-md transition-all duration-300 \"\n              onClick={() => {\n                setSelected(coin);\n                setActive((prev) => !prev);\n              }}\n            >\n              <div className=\" flex items-center flex-1\">\n                <img src={coin.image} className=\"w-7\" alt={coin.name} />\n                <p className=\"ml-2\">{coin.shortName}</p>\n              </div>\n              <p className=\"hidden sm:block\">{coin.name}</p>\n            </div>\n          ))}\n        </div>\n      </div> */}\n    </div>\n  </div>\n);\n","import { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport Panel from \"../components/swapPanel\";\nconst Swap = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"flex relative bg-black min-h-screen\" >\n      <Sidebar show={show} setShow={setShow} />\n      <Panel show={show} setShow={setShow} />\n    </div>\n  );\n};\n\nexport default Swap;\n","import { GiHamburgerMenu } from \"react-icons/gi\";\n\nconst Panel = ({ show, setShow }) => {\n  return (\n    <>\n      <div className=\"flex-1 bg-black mb-10\">\n        <div className=\"px-4 bg-dark-400 py-4 flex text-white justify-between lg:justify-end\">\n          <button\n            className=\"lg:hidden\"\n            onClick={() => setShow((prev) => !prev)}\n          >\n            <GiHamburgerMenu />\n          </button>\n          <button className=\"border border-success-500 py-2 px-4\">\n            Connect Account\n          </button>\n        </div>\n        <div className=\" mx-10 mt-10 \"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Panel;\n","import { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport Panel from \"../components/buyPanel\";\nconst Buy = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"flex relative bg-black\">\n      <Sidebar show={show} setShow={setShow} />\n      <Panel show={show} setShow={setShow} />\n    </div>\n  );\n};\n\nexport default Buy;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst VerifyEmail = (props) => {\n  const search = useLocation().search;\n  const [token] = useState(new URLSearchParams(search).get(\"token\"));\n  const [msg, setMsg] = useState(\"verifing\");\n  useEffect(() => {\n    console.log(token);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/verify-email`, { token: token })\n      .then((res) => setMsg(\"Verified Successfully\"))\n      .catch((err) => setMsg(\"Verification Failed\"));\n  }, []);\n  return (\n    <div className=\"app font-sans min-w-screen min-h-screen bg-grey-lighter py-8 px-4\">\n      <div className=\"mail__wrapper max-w-md mx-auto\">\n        <div className=\"mail__content bg-white p-8 shadow-md\">\n          <div className=\"content__header text-center tracking-wide border-b\">\n            <h1 className=\"text-3xl h-48 flex items-center justify-center\">\n              {msg}\n            </h1>\n          </div>\n          <Link to={\"/login\"}>\n            <button className=\"text-sm tracking-wide bg-red rounded w-full my-8 p-4\">\n              Click here to Sign in\n            </button>\n          </Link>\n        </div>\n        <div className=\"text-center text-sm text-grey-darker mt-8\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifyEmail;\n","import {\n  SIGNUP,\n  SIGNUP_ERROR,\n  SIGNUP_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGOUT\n} from './auth-type';\n\nconst initialState = {\n  data: null,\n  loading: false,\n  registered: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case SIGNUP:\n        return {\n          ...state,\n          loading: true,\n          registered: false,\n          error: null\n        };\n      case SIGNUP_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          data: action.payload,\n          registered: true,\n          error: null\n        };\n      case SIGNUP_ERROR:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload,\n          registered: false\n        }\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          data: action.payload,\n          loggedIn: true,\n          error: null\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          loading: false,\n          data: null,\n          loggedIn: false,\n          error: null\n        }\n      default:\n        return state;\n    }\n  };\n  \nexport default reducer;\n","export const GET_USERS = \"GET_USERS\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_ERROR = \"GET_USERS_ERROR\";","import {\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_ERROR\n} from './user-type';\n\nconst initialState = {\n  data: null,\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case GET_USERS:\n        return {\n          ...state,\n          loading: true,\n          error: null\n        };\n      case GET_USERS_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          data: action.payload,\n          error: null\n        };\n      case GET_USERS_ERROR:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload\n        }\n      default:\n        return state;\n    }\n  };\n  \nexport default reducer;\n","import {combineReducers} from 'redux';\nimport auth from './auth/auth-reducer';\nimport users from './users/user-reducer';\n \nexport default combineReducers({\n    auth,\n    users\n});\n","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import \"./users.css\";\nimport { useEffect, useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { getUsers } from \"../redux/users/user-action\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/layout\";\nimport axios from \"axios\";\n\nconst Users = (props) => {\n  const navigator = useNavigate();\n  const [show, setShow] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    props.dispatch(getUsers());\n    const token = JSON.parse(localStorage.getItem(\"user-data\")).jwtToken;\n    console.log(token);\n    axios\n      .get(\"https://backend-dev-s.herokuapp.com/accounts\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(response)\n        if(response.status == 200) {\n          setUsers(response.data)\n        }\n      })\n      .catch((error) => {\n        navigator(\"/login\");\n      });\n  }, []);\n\n  const handleClick = (e, id) => {\n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/${id}`,\n        { block: !e },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"sessionId\")}`,\n          },\n        }\n      )\n      .then((res) => {})\n      .catch((err) => {\n        const errMsg = err.response?.data?.message;\n      });\n  };\n\n  return (\n    <Layout>\n      <div className=\"container mx-auto px-4 sm:px-8 min-h-screen\">\n        <div className=\"py-8\">\n          <div>\n            <h2 className=\"text-2xl font-semibold leading-tight\">Invoices</h2>\n          </div>\n          <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n            <div className=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\">\n              <table className=\"min-w-full leading-normal\">\n                <thead>\n                  <tr>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      S.No\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Name\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Email\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Joining date\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Blocked\n                    </th>\n                  </tr>\n                  {users.length != 0 && users.map(user => <tr key = {user.id}>\n                    \n                    <td className=\"px-5 py-3 border-b-2  text-left text-xs font-semibold uppercase tracking-wider\" >\n                      {user.id}\n                    </td>\n                    <td className=\"px-5 py-3 border-b-2  text-left text-xs font-semibold uppercase tracking-wider\">\n                      {user.fullName}\n                    </td>\n                    <td className=\"px-5 py-3 border-b-2  text-left text-xs font-semibold uppercase tracking-wider\">\n                      {user.email}\n                    </td>\n                    <td className=\"px-5 py-3 border-b-2  text-left text-xs font-semibold uppercase tracking-wider\">\n                      {user.created}\n                    </td>\n                    <td className=\"px-5 py-3 border-b-2  text-center text-xs font-semibold uppercase tracking-wider\">\n                      {user.isVerified? \"true\": \"false\"}\n                    </td>\n                  </tr>)}\n                </thead>\n                <tbody>\n                  {props.users &&\n                    props.users.data &&\n                    props.users.data.map((users, index) => {\n                      return (\n                        <tr>\n                          <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                              {index + 1}\n                            </p>\n                          </td>\n                          <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                              {users.fullName}\n                            </p>\n                          </td>\n                          <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                              {users.email}\n                            </p>\n                          </td>\n                          <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                              {users.created}\n                            </p>\n                          </td>\n                          <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\">\n                            <div className=\"flex items-center justify-center w-full mb-12\">\n                              <label\n                                for={`toggleB${index}`}\n                                className=\"flex items-center cursor-pointer\"\n                              >\n                                <div className=\"relative\">\n                                  <input\n                                    type=\"checkbox\"\n                                    id={`toggleB${index}`}\n                                    className=\"sr-only\"\n                                    checked={users.block}\n                                    onClick={(e) =>\n                                      handleClick(users.block, users.id)\n                                    }\n                                  />\n                                  <div className=\"block bg-gray-600 w-14 h-8 rounded-full\"></div>\n                                  <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\"></div>\n                                </div>\n                              </label>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users,\n  };\n};\nexport default connect(mapStateToProps)(Users);\n","import {\n    GET_USERS,\n    GET_USERS_SUCCESS,\n    GET_USERS_ERROR\n  } from \"./user-type\";\nimport axios from \"axios\";\n  \nexport const getUsers = () => (dispatch) => {\n    dispatch({ type: GET_USERS })\n    axios.get(`${process.env.REACT_APP_API_URL}`, {headers: {Authorization: `Bearer ${localStorage.getItem('sessionId')}`}})\n        .then(async res => {\n            dispatch({type: GET_USERS_SUCCESS, payload: res.data});\n        })\n        .catch(err=>{\n            const errMsg = err.response?.data?.message;\n            dispatch({type: GET_USERS_ERROR, payload: errMsg ? errMsg : 'Internal server error'});\n        })\n}\n  ","export default __webpack_public_path__ + \"static/media/transfer.e5ee508c.png\";","export default __webpack_public_path__ + \"static/media/paper-plane.1cb40e00.png\";","import \"./styles.css\";\nimport { useState } from \"react\";\nimport AVATAR from \"./AVATAR.json\";\nimport axios from \"axios\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { FaChevronDown, FaArrowDown } from \"react-icons/fa\";\nimport ShareformLogo from \"../../assets/images/transfer.png\";\nimport Send from \"../../assets/images/paper-plane.png\";\nimport Laout from \"../layout\";\nimport TransactionModal from \"../modals/TransactionModal\";\nimport Avatar from \"../../assets/images/avtar.png\";\nimport BNB from \"../../assets/images/bnb.png\";\n\nconst Web3 = require(\"web3\");\nconst rpcURL = \"https://bsc-dataseed.binance.org/\";\n//const rpcURL = \"https://data-seed-prebsc-1-s1.binance.org:8545/\"\nconst web3 = new Web3(rpcURL);\nlet AVATARtokenAddress = AVATAR.address;\nlet AVATARtokenABI = AVATAR.abi;\n\nconst coins = [\n    {\n        id: 1,\n        name: \"Avtar\",\n        image: Avatar,\n    },\n    {\n        id: 2,\n        name: \"BNB\",\n        image: BNB,\n    },\n];\n\nconst Panel = ({ show, setShow }) => {\n    const [amount, setAmount] = useState();\n    const [receiverwallet, setReceiverwallet] = useState();\n    const [txId, setTxId] = useState(\"\");\n\n    const [approvalModal, setApprovalModal] = useState(false);\n    const [successModal, setSuccessModal] = useState(false);\n    const [errorModal, setErrorModal] = useState(false);\n\n    const [selected, setSelected] = useState(coins[0]);\n    const [active, setActive] = useState(false);\n\n    const add = ()=>{\n       \n        const config = {\n            headers: {\n            'Content-Type': 'application/json',\n            \"alg\": \"HS256\",\n            \"typ\": \"JWT\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"sessionId\"),\n            }\n        }\n \n        axios.post(\"http://localhost:3001/transactions/add\", {\n            from: JSON.parse(localStorage.getItem(\"user-data\")).id,\n            to: receiverwallet,\n            amount: amount,\n            currency: selected.name\n        }, config )\n        .then(async res => {\n          console.log(res)\n          \n        })\n        .catch(err=>{\n          console.log(err.stack)\n          const errMsg = err.response?.data?.message;\n        //    console.log(errMsg);\n        } )\n    }\n    \n    const transfer = async () => {\n        const userData = JSON.parse(localStorage.getItem(\"user-data\"));\n\n        // console.log('user', userData)\n        // const walletid = userData.wallet;\n\n        // const contract = await new web3.eth.Contract(\n        //     AVATARtokenABI,\n        //     AVATARtokenAddress\n        // );\n\n        if (!amount) {\n            alert(\"Invalid amount\");\n            return;\n        }\n        if (!receiverwallet) {\n            alert(\"Invalid receiver wallet address\");\n            return;\n        }\n        if (parseInt(amount) < 0) {\n            alert(\"Amount should be greater than zero\");\n        }\n\n    \n        try {\n        \n            if (selected.name === \"BNB\") {\n                setApprovalModal(true);\n    \n                const transferAmount = await web3.utils.toWei(amount.toString());\n                web3.eth.accounts\n                    .signTransaction(\n                        {\n                            to: receiverwallet,\n                            value: transferAmount,\n                            gas: 3000000,\n                        },\n                        userData.privateKey\n                    )\n                    .then(async (res) => {\n                        web3.eth\n                            .sendSignedTransaction(res.rawTransaction)\n                            .then((res) => {\n                                console.log(res);\n                                setTxId(res.transactionHash);\n                            });\n    \n                        setApprovalModal(false);\n                        setSuccessModal(true);\n                        add();\n                    })\n                    .catch(() => {\n                        setApprovalModal(false);\n                        setErrorModal(true);\n                    });\n            } else if (selected.name === \"Avtar\") {\n                setApprovalModal(true);\n\n                //put avatart contract address to string for demo is equinox address\n    \n                const contract = await new web3.eth.Contract(AVATARtokenABI, \"0xe4b7a93dff5f23639698d38415dacca820ff11ca\");\n\n    \n    \n                const transferAmount = await web3.utils.toWei(amount.toString());\n\n                const acc = await web3.eth.accounts.privateKeyToAccount(userData.privateKey);\n    \n                var count = await web3.eth.getTransactionCount(acc.address);\n\n                web3.eth.accounts\n                    .signTransaction(\n                        {\n                            from: acc.address,\n                            to: contract._address,\n                            value: \"0\",\n                            gas: 300000,\n                            data: contract.methods.transfer(receiverwallet, transferAmount).encodeABI(), // transfer(to, amount);\n                            nonce:web3.utils.toHex(count)\n                        },\n                        userData.privateKey\n                    )\n                    .then(async (res) => {\n                       await web3.eth\n                            .sendSignedTransaction(res.rawTransaction)\n                            .then((res) => {\n                                console.log(res);\n                                setTxId(res.transactionHash);\n                            });\n    \n                        setApprovalModal(false);\n                        setSuccessModal(true);\n                        add();\n                    })\n                    .catch(() => {\n                        setApprovalModal(false);\n                        setErrorModal(true);\n                    });\n            } else {\n                alert(\"Invalid transfer option\");\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        /*let contract = await new web3.eth.Contract(AVATARtokenABI, AVATARtokenAddress);\n                const walletid = userData.wallet;\n        console.log(receiverwallet, '----', amount)\n        await contract.methods\n          .transfer(receiverwallet, amount)\n          .send({ from: '0x9a4a2F984617cC5d38D4527Ba46C4e57d3458C83' })\n          .on(\"error\", (err)=> {\n            console.log(err, '--d---d')\n          })\n          .then((receipt) => {\n            console.log(\"receipt\", receipt);\n          });*/\n    };\n\n    return (\n        <>\n            <TransactionModal\n                open={approvalModal}\n                setOpen={setApprovalModal}\n                button={false}\n            />\n            <TransactionModal\n                open={successModal}\n                setOpen={setSuccessModal}\n                title=\"Success\"\n                subTitle=\"Transaction has been successfully completed\"\n                refresh={false}\n            />\n            <TransactionModal\n                open={errorModal}\n                setOpen={setErrorModal}\n                title=\"Error\"\n                subTitle=\"Make sure you have enough assets in your Avtar wallet\"\n                refresh={false}\n            />\n\n            <Laout show={show} setShow={setShow}>\n                {txId && (\n                    <div\n                        className=\"bg-teal-100 border border-cian-400 text-blue-600 px-7 py-3 rounded relative w-11/12 mt-10 m-auto word-break\"\n                        role=\"alert\"\n                    >\n                        <span className=\"block sm:inline\">\n                            Transaction Successfull\n                        </span>\n                        <strong className=\"ml-2 font-bold break-all\">Tx: {txId}</strong>\n                        <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                            <svg\n                                className=\"fill-current h-6 w-6 text-red-500\"\n                                role=\"button\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 20 20\"\n                            >\n                                <title>Close</title>\n                                <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n                            </svg>\n                        </span>\n                    </div>\n                )}\n                <div className=\" mx-15 mt-10 flex justify-center items-center\">\n                    <div\n                        className=\" max-w-lg p-5 w-full bg-dark-500 rounded-xl text-white\"\n                        style={{\n                            backgroundColor: \"#1C1B1B\",\n                            paddingLeft: \"30px\",\n                            paddingRight: \"30px\",\n                        }}\n                    >\n                        <div\n                            className=\"shareform-heading\"\n                            style={{\n                                display: \"flex\",\n                            }}\n                        >\n                            <img src={ShareformLogo} width={\"5%\"} />\n                            <h4\n                                style={{\n                                    color: \"white\",\n                                    paddingLeft: \"25px\",\n                                }}\n                            >\n                                Send AVTAR tokens to any wallet address\n                            </h4>\n                        </div>\n                        <form\n                            className=\"sharefrom\"\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                            }}\n                        >\n                            <label\n                                className=\"block pt-5 \"\n                                for=\"address\"\n                                style={{\n                                    color: \"white\",\n                                }}\n                            >\n                                Receiver wallet address\n                            </label>\n\n                            <input\n                                name=\"address\"\n                                id=\"address\"\n                                type={\"text\"}\n                                value={receiverwallet}\n                                onChange={(e) =>\n                                    setReceiverwallet(e.target.value)\n                                }\n                                required\n                            />\n\n                            <input\n                                name=\"amount\"\n                                id=\"amount\"\n                                type={\"number\"}\n                                value={amount}\n                                onChange={(e) => setAmount(e.target.value)}\n                                placeholder=\"Enter amount here..\"\n                                required\n                            />\n\n                            <CustomInput\n                                selected={selected}\n                                setSelected={setSelected}\n                                active={active}\n                                setActive={setActive}\n                            />\n\n                            <button type=\"button\" onClick={transfer}>\n                                <img src={Send} width=\"5%\" />\n                                <h4>Send</h4>\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </Laout>\n        </>\n    );\n};\n\nexport default Panel;\n\nconst CustomInput = ({ selected, setSelected, active, setActive }) => (\n    <div className=\"bg-dark-700 p-3 rounded-lg mt-1 relative mb-4\">\n        <div\n            className=\"flex items-center justify-between cursor-pointer\"\n            onClick={() => setActive((prev) => !prev)}\n        >\n            <div className=\"flex items-center justify-start\">\n                <img\n                    src={selected.image}\n                    alt={selected.name}\n                    className=\" w-7\"\n                />\n                <p className=\"font-medium ml-2 text-base\">{selected.name}</p>\n            </div>\n            <span className=\"text-graish ml-2\">\n                <FaChevronDown />\n            </span>\n        </div>\n\n        <div\n            className={`rounded-md absolute p-2 top-full left-0 border-t-0 border-2 border-darKGary w-full shadow-xl bg-gray transition-all duration-300 z-50 ${\n                active\n                    ? \" max-h-96 opacity-100 pointer-events-auto\"\n                    : \"max-h-0 overflow-y-hidden opacity-0 pointer-events-none\"\n            }`}\n        >\n            <div>\n                {coins.map((coin, i) => (\n                    <div\n                        className=\"flex justify-between items-center hover:bg-dark-600 p-2 cursor-pointer rounded-md transition-all duration-300 \"\n                        onClick={() => {\n                            setSelected(coin);\n                            setActive((prev) => !prev);\n                        }}\n                        style={\n                            i !== coins.length - 1\n                                ? { marginBottom: \"10px\" }\n                                : {}\n                        }\n                    >\n                        <div className=\" flex items-center flex-1\">\n                            <img\n                                src={coin.image}\n                                className=\"w-7\"\n                                alt={coin.name}\n                            />\n                            <p className=\"ml-2\">{coin.name}</p>\n                        </div>\n                        <p>{coin.name}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>\n);\n","import { useState } from \"react\";\nimport Sidebar from \"../components/sidebar\";\nimport Panel from \"../components/sendPanal\";\nconst Buy = () => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"flex relative bg-black min-h-screen\">\n      <Sidebar show={show} setShow={setShow} />\n      <Panel show={show} setShow={setShow}/>\n    </div>\n  );\n};\n\nexport default Buy;\n","import Logo from \"../assets/images/avtar.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PrivacyPolicy = () => {\r\n    return (\r\n        <section className=\"py-20 px-10 bg-dark-500\">\r\n            <div className=\"mb-20 grid grid-cols-3 items-center\">\r\n                <Link to=\"/\">\r\n                    <div className=\"w-10 max-h-full sm:w-16\">\r\n                        <img src={Logo} alt=\"\" className=\"w-full h-auto\"/>\r\n                    </div>\r\n                </Link>\r\n\r\n                <h1 className=\"text-white text-4xl sm:text-6xl text-center  font-bold\">\r\n                    Privacy Policy\r\n                </h1>\r\n            </div>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We The Avtar Collective (The Avtar Collective.com), are\r\n                committed to protecting any data that we collect concerning you.\r\n                By using our services, you agree to the use of the data that we\r\n                collect in accordance with this Privacy Policy.\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We are committed to protecting your privacy.\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We collect the minimum amount of information about you that is\r\n                commensurate with providing you with a satisfactory service.\r\n                This Policy indicates the type of processes that may result in\r\n                data being collected about you. The purpose of this Privacy\r\n                Policy to enable you to understand which personal identifying\r\n                information (\"PI\", \"Personal Information\") of yours is\r\n                collected, how and when we might use your information, who has\r\n                access to this information, and how you can correct any\r\n                inaccuracies in the information. To better protect your privacy,\r\n                we provide this notice explaining our online information\r\n                practices and the choices you can make about the way your\r\n                information is collected and used. To make this notice easy to\r\n                find, we make it available on our website.\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Information Collected</p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We may collect any or all the information that via both\r\n                automated means such as communications profiles and cookies.\r\n                Personal Information you give us depends on the type of service,\r\n                support, or sale inquiry, and may include your name, address,\r\n                telephone number, fax number and email address, dates of service\r\n                provided, types of service provided, payment history, manner of\r\n                payment, amount of payments, date of payments, domain name or\r\n                other payment information. All sensitive information is\r\n                collected on a secure server and data is transferred. When\r\n                transferring personal information, a security icon will appear\r\n                in your browser.\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Information Use</p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                This information is used for billing and to provide service and\r\n                support to our customers. We may also study this information to\r\n                determine our customers' needs and provide support for our\r\n                customers. All reasonable precautions are taken to prevent\r\n                unauthorised access to this information. This safeguard may\r\n                require you to provide additional forms of identity should you\r\n                wish to obtain information about your account details.\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We use IP addresses to analyse trends, administer our site and\r\n                servers, track access, and gather broad demographic information\r\n                for aggregate use. IP addresses are not linked to personally\r\n                identifiable information. It is possible that personal\r\n                information about a customer may be included in the log files\r\n                due to the normal functions of IP addresses and SaaS\r\n                applications.\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Cookies</p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg break-all\">\r\n                Your Internet browser has the in-built facility for storing\r\n                small text files - \"cookies\" - that hold information which\r\n                allows a website to recognize your account. We use cookies to\r\n                save your preferences and login information, and provide\r\n                personalized functionality. You can reject cookies by changing\r\n                your browser settings, but be aware that this will disable some\r\n                of the functionality on the The Avtar Collective website. More\r\n                information about cookies can be found\r\n                at https://en.wikipedia.org/wiki/HTTP_cookie.\r\n            </p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n","import Logo from \"../assets/images/avtar.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TermsCondition = () => {\r\n    return (\r\n        <section className=\"py-20 px-10 bg-dark-500\">\r\n            <div className=\"mb-20 grid grid-cols-3 items-center\">\r\n                <Link to=\"/\">\r\n                    <div className=\"w-10 max-h-full sm:w-16\">\r\n                        <img src={Logo} alt=\"\" className=\"w-full h-auto\" />\r\n                    </div>\r\n                </Link>\r\n\r\n                <h1 className=\"text-white text-4xl sm:text-6xl text-center  font-bold\">\r\n                    Terms &amp; Conditions\r\n                </h1>\r\n            </div>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Interpretation</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                The words of which the initial letter is capitalized have\r\n                meanings defined under the following conditions.\r\n                <br />\r\n                The following definitions shall have the same meaning regardless\r\n                of whether they appear in singular or in plural.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Definitions</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                The words of which the initial letter is capitalized have\r\n                meanings defined under the following conditions. The following\r\n                definitions shall have the same meaning regardless of whether\r\n                they appear in singular or in plural.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Affiliate means an entity that controls, is controlled by or is\r\n                under common control with a party, where \"control\" means\r\n                ownership of 50% or more of the shares, equity interest or other\r\n                securities entitled to vote for election of directors or other\r\n                managing authority.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Country&nbsp;\r\n                <span>refers to: Delaware, United States.</span>\r\n            </p>\r\n\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Company\r\n                <br />\r\n                (referred to as either \"the Company\", \"We\", \"Us\" or \"Our\" in\r\n                this Agreement) refers to The Avtar Collective.\r\n                <br />\r\n                Device\r\n                <br />\r\n                means any device that can access the Service such as a computer,\r\n                a cellphone or a digital tablet.\r\n                <br />\r\n                Service\r\n                <br />\r\n                refers to the Website.\r\n                <br />\r\n                Terms and Conditions\r\n                <br />\r\n                (also referred as \"Terms\") mean these Terms and Conditions that\r\n                form the entire agreement between You and The Avtar Collective\r\n                regarding the use of the Service.\r\n                <br />\r\n                Third-party Social Media Service\r\n                <br />\r\n                means any services or content (including data, information,\r\n                products or services) provided by a third-party that may be\r\n                displayed, included or made available by the Service.\r\n                <br />\r\n                Website\r\n                <br />\r\n                refers to The Avtar Collective, accessible from https://The\r\n                Avtar Collective.net\r\n                <br />\r\n                You\r\n                <br />\r\n                means the individual accessing or using the Service, or the\r\n                company, or other legal entity on behalf of which such\r\n                individual is accessing or using the Service, as applicable.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Acknowledgment</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                These are the Terms and Conditions governing the use of this\r\n                Service and the agreement that operates between You and the\r\n                Company. These Terms and Conditions set out the rights and\r\n                obligations of all users regarding the use of the Service.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                There are other terms that may apply to you.\r\n                <br />\r\n                These terms of use refer to the following additional terms,\r\n                which also apply to your use of our site:\r\n                <br />\r\n                Our Privacy Policy - https://The Avtar Collective.net/privacy.\r\n                Please refer to our Privacy Policy on how we collect, use and\r\n                disclose information about our users.\r\n                <br />\r\n                Our Cookie Policy - https://The Avtar Collective.net/privacy,\r\n                which sets out information about the cookies on our site.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Your access to and use of the Service is conditioned on Your\r\n                acceptance of and compliance with these Terms and Conditions.\r\n                These Terms and Conditions apply to all visitors, users and\r\n                others who access or use the Service.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                By accessing or using the Service You agree to be bound by these\r\n                Terms and Conditions. If You disagree with any part of these\r\n                Terms and Conditions then You may not access the Service.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You represent that you are over the age of 18. The Company does\r\n                not permit those under 18 to use the Service.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Your access to and use of the Service is also conditioned on\r\n                Your acceptance of and compliance with the Privacy Policy of the\r\n                Company. Our Privacy Policy describes Our policies and\r\n                procedures on the collection, use and disclosure of Your\r\n                personal information when You use the Application or the Website\r\n                and tells You about Your privacy rights and how the law protects\r\n                You. Please read Our Privacy Policy carefully before using Our\r\n                Service.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">User Contributions</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                The Website may contain message boards, chat rooms, personal web\r\n                pages or profiles, forums, bulletin boards and other interactive\r\n                features (collectively, \"Interactive Services\") that allow users\r\n                to post, submit, publish, display, or transmit to other users or\r\n                other persons (hereinafter, \"post\") content or materials\r\n                (collectively, \"User Contributions\") on or through the Website.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                All User Contributions must comply with the Content Standards\r\n                set out in these Terms of Use.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Any User Contribution you post to the site will be considered\r\n                non-confidential and non-proprietary. By providing any User\r\n                Contribution on the Website, you grant the Company and our\r\n                Affiliates, and assignees the right to use, reproduce, modify,\r\n                perform, display, distribute, and otherwise disclose to third\r\n                parties any such material.\r\n                <br />\r\n                You represent and warrant that:\r\n                <br />\r\n                You own or control all rights in and to the User Contributions\r\n                and have the right to grant the license granted above to us and\r\n                our Affiliates.\r\n                <br />\r\n                All of your User Contributions do and will comply with these\r\n                Terms of Use.\r\n                <br />\r\n                You understand and acknowledge that you are responsible for any\r\n                User Contributions you submit or contribute, and you, not the\r\n                Company, have full responsibility for such content, including\r\n                its legality, reliability, accuracy, and appropriateness. We are\r\n                not responsible or liable to any third party for the content or\r\n                accuracy of any User Contributions posted by you or any other\r\n                user of the Website. By posting User Contributions, you hereby\r\n                release The Avtar Collective and its agents and employees from\r\n                any claims that such use, as authorized above, violates any of\r\n                your rights and you understand that you will not be entitled to\r\n                any additional compensation for any use of your User\r\n                Contributions.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You agree not to post, send or create User Contributions that\r\n                are in compliance with the following (Content Standards):\r\n                <br />\r\n                In any way that breaches any applicable local, national or\r\n                international law or regulation.\r\n                <br />\r\n                In any way that is unlawful or fraudulent or has any unlawful or\r\n                fraudulent purpose or effect.\r\n                <br />\r\n                Defamatory of any person, obscene, offensive, hateful or\r\n                inflammatory, bully, insult, intimidate or humiliate, promote\r\n                sexually explicit material, include child sexual abuse material\r\n                and promote violence.\r\n                <br />\r\n                Promote discrimination based on race, sex, religion,\r\n                nationality, disability, sexual orientation or age.\r\n                <br />\r\n                Infringe any copyright, database right or trademark of any other\r\n                person.\r\n                <br />\r\n                Be likely to deceive any person.\r\n                <br />\r\n                Breach any legal duty owed to a third party, such as a\r\n                contractual duty or a duty of confidence.\r\n                <br />\r\n                Promote any illegal content or activity.\r\n                <br />\r\n                Be in contempt of court.\r\n                <br />\r\n                Be threatening, abuse or invade another's privacy, or cause\r\n                annoyance.\r\n                <br />\r\n                Be likely to harass, upset, embarrass, alarm or annoy any other\r\n                person.\r\n                <br />\r\n                Impersonate any person or misrepresent your identity or\r\n                affiliation with any person.\r\n                <br />\r\n                Give the impression that the Contribution emanates from the\r\n                Company, if this is not the case.\r\n                <br />\r\n                Advocate, promote, incite any party to commit, or assist any\r\n                unlawful or criminal act such as (by way of example only)\r\n                copyright infringement or computer misuse.\r\n                <br />\r\n                Contain a statement which you know or believe, or have\r\n                reasonable grounds for believing, that members of the public to\r\n                whom the statement is, or is to be, published are likely to\r\n                understand as a direct or indirect encouragement or other\r\n                inducement to the commission, preparation or instigation of acts\r\n                of terrorism.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                When we consider that a breach of the User Contribution has\r\n                occurred, we may take such action as we deem appropriate.\r\n                <br />\r\n                If you wish to complain about content uploaded by other users,\r\n                please contact us at hello@TheAvtarCollective.com\r\n                <br />\r\n                By posting User Contributions, you hereby release The Avtar\r\n                Collective and its agents and employees from any claims that\r\n                such use, as authorized above, violates any of your rights and\r\n                you understand that you will not be entitled to any additional\r\n                compensation for any use of your User Contributions.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Website Use</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You may use our Website only for lawful purposes. You may not\r\n                use our Website:\r\n                <br />\r\n                In any way that breaches any applicable local, national or\r\n                international law or regulation.\r\n                <br />\r\n                In any way that is unlawful or fraudulent or has any unlawful or\r\n                fraudulent purpose or effect.\r\n                <br />\r\n                To bully, insult, intimidate or humiliate any person.\r\n                <br />\r\n                To send, knowingly receive, upload, download, use or re-use any\r\n                material which does not comply with our User Contributions.\r\n                <br />\r\n                To transmit, or procure the sending of, any unsolicited or\r\n                unauthorized advertising or promotional material or any other\r\n                form of similar solicitation (spam).\r\n                <br />\r\n                To knowingly transmit any data, send or upload any material that\r\n                contains viruses, Trojan horses, worms, time-bombs, keystroke\r\n                loggers, spyware, adware or any other harmful programs or\r\n                similar computer code designed to adversely affect the operation\r\n                of any computer software or hardware.\r\n                <br />\r\n                You also agree:\r\n                <br />\r\n                Not to reproduce, duplicate, copy or re-sell any part of our\r\n                Website in contravention of the provisions of our Terms of\r\n                Service.\r\n                <br />\r\n                Not to access without authority, interfere with, damage or\r\n                disrupt: any part of our Website; any equipment or network on\r\n                which our Website is stored; any software used in the provision\r\n                of our Website; or any equipment or network or software owned or\r\n                used by any third party.\r\n                <br />\r\n                Attack the Website via a denial-of-service attack or a\r\n                distributed denial-of-service attack.\r\n                <br />\r\n                Otherwise attempt to interfere with the proper working of the\r\n                Website.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                USER-GENERATED CONTENT IS NOT APPROVED BY US.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                This Website may include information and materials uploaded by\r\n                other users of the Website, including to forums. Unless\r\n                expressly stated, this information and materials have not been\r\n                verified or approved by us. The views expressed by other users\r\n                on our Website do not represent our views or values. We refer\r\n                you to the section see User Contributions for further\r\n                information.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Intellectual Property</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We are the owner or the licensee of all intellectual property\r\n                rights in our Website, and in all the material published on it.\r\n                Those works are protected by copyright laws and treaties around\r\n                the world. All such rights are reserved.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You may print off one copy, and may download extracts, of any\r\n                page(s) from our Website for your personal use and you may draw\r\n                the attention of others within your organisation to content\r\n                posted on our Website.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Unless stated otherwise, you must not modify the paper or\r\n                digital copies of any materials you have printed off or\r\n                downloaded in any way, and you must not use any illustrations,\r\n                photographs, video or audio sequences or any graphics separately\r\n                from any accompanying text.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Our status (and that of any identified contributors) as the\r\n                authors of content on our Website must always be acknowledged.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You must not use any part of the content on our Website for\r\n                commercial purposes without obtaining a licence to do so from us\r\n                or our licensors.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                If you print off, copy or download any part of our Website in\r\n                breach of these terms of use, your right to use our Website will\r\n                cease immediately and you must, at our option, return or destroy\r\n                any copies of the materials you have made.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                UPLOADING CONTENT TO OUR WEBSITE\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Whenever you make use of a feature that allows you to upload\r\n                content to our Website, or to make contact with other users of\r\n                our Website, you must comply with the standards set out in User\r\n                Contributions.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You warrant that any such contribution does comply with these\r\n                standards, and you will be liable to us and indemnify us for any\r\n                breach of that warranty. This means you will be responsible for\r\n                any loss or damage we suffer as a result of your breach of\r\n                warranty.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We make no claims as to ownership or control over any User\r\n                Contributions. Any content you upload to our Website will be\r\n                considered non-confidential and non-proprietary. You retain all\r\n                of your ownership rights in your content, but you are required\r\n                to grant us a limited licence to use, store and copy that\r\n                content and to distribute and make it available to third\r\n                parties.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                The rights you license to us are described in Rights you are\r\n                giving us to use User Contributions.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We also have the right to disclose your identity to any third\r\n                party who is claiming that any content posted or uploaded by you\r\n                to our Website constitutes a violation of their intellectual\r\n                property rights, or of their right to privacy.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We have the right to remove any posting you make on our Website\r\n                if, in our opinion, your post does not comply with the content\r\n                standards set out in User Contribution. Please read the User\r\n                Contributions for full details.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Links to Other Websites\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Our Service may contain links to third-party web sites or\r\n                services that are not owned or controlled by the Company.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                The Company has no control over, and assumes no responsibility\r\n                for, the content, privacy policies, or practices of any third\r\n                party web sites or services. You further acknowledge and agree\r\n                that the Company shall not be responsible or liable, directly or\r\n                indirectly, for any damage or loss caused or alleged to be\r\n                caused by or in connection with the use of or reliance on any\r\n                such content, goods or services available on or through any such\r\n                web sites or services.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We strongly advise You to read the terms and conditions and\r\n                privacy policies of any third-party web sites or services that\r\n                You visit.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Termination</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We may terminate or suspend Your access immediately, without\r\n                prior notice or liability, for any reason whatsoever, including\r\n                without limitation if You breach these Terms and Conditions.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Upon termination, Your right to use the Service will cease\r\n                immediately.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Limitation of Liability\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                TO THE FULLEST EXTENT PROVIDED BY LAW, IN NO EVENT WILL THE\r\n                COMPANY, ITS AFFILIATES, OR THEIR LICENSORS, SERVICE PROVIDERS,\r\n                EMPLOYEES, AGENTS, OFFICERS, OR DIRECTORS BE LIABLE FOR DAMAGES\r\n                OF ANY KIND, UNDER ANY LEGAL THEORY, ARISING OUT OF OR IN\r\n                CONNECTION WITH YOUR USE, OR INABILITY TO USE, THE WEBSITE, ANY\r\n                WEBSITES LINKED TO IT, ANY CONTENT ON THE WEBSITE OR SUCH OTHER\r\n                WEBSITES, INCLUDING ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL,\r\n                CONSEQUENTIAL, OR PUNITIVE DAMAGES, INCLUDING BUT NOT LIMITED\r\n                TO,, LOSS OF REVENUE, LOSS OF PROFITS, LOSS OF BUSINESS OR\r\n                ANTICIPATED SAVINGS, LOSS OF USE, LOSS OF GOODWILL, LOSS OF\r\n                DATA, AND WHETHER CAUSED BY TORT (INCLUDING NEGLIGENCE), BREACH\r\n                OF CONTRACT, OR OTHERWISE, EVEN IF FORESEEABLE.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Disclaimer of Warranties\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You understand that we cannot and do not guarantee or warrant\r\n                that files available for downloading from the internet or the\r\n                Website will be free of viruses or other destructive code. You\r\n                are responsible for implementing sufficient procedures and\r\n                checkpoints to satisfy your particular requirements for\r\n                anti-virus protection and accuracy of data input and output, and\r\n                for maintaining a means external to our site for any\r\n                reconstruction of any lost data.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                TO THE FULLEST EXTENT PROVIDED BY LAW, WE WILL NOT BE LIABLE FOR\r\n                ANY LOSS OR DAMAGE CAUSED BY A DISTRIBUTED DENIAL-OF-SERVICE\r\n                ATTACK, VIRUSES, OR OTHER TECHNOLOGICALLY HARMFUL MATERIAL THAT\r\n                MAY INFECT YOUR COMPUTER EQUIPMENT, COMPUTER PROGRAMS, DATA, OR\r\n                OTHER PROPRIETARY MATERIAL DUE TO YOUR USE OF THE WEBSITE OR ANY\r\n                SERVICES OR ITEMS OBTAINED THROUGH THE WEBSITE OR TO YOUR\r\n                DOWNLOADING OF ANY MATERIAL POSTED ON IT, OR ON ANY WEBSITE\r\n                LINKED TO IT.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                YOUR USE OF THE WEBSITE, ITS CONTENT, AND ANY SERVICES OR ITEMS\r\n                OBTAINED THROUGH THE WEBSITE IS AT YOUR OWN RISK. THE WEBSITE,\r\n                ITS CONTENT, AND ANY SERVICES OR ITEMS OBTAINED THROUGH THE\r\n                WEBSITE ARE PROVIDED ON AN \"AS IS\" AND \"AS AVAILABLE\" BASIS,\r\n                WITHOUT ANY WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED.\r\n                NEITHER THE COMPANY NOR ANY PERSON ASSOCIATED WITH THE COMPANY\r\n                MAKES ANY WARRANTY OR REPRESENTATION WITH RESPECT TO THE\r\n                COMPLETENESS, SECURITY, RELIABILITY, QUALITY, ACCURACY, OR\r\n                AVAILABILITY OF THE WEBSITE. WITHOUT LIMITING THE FOREGOING,\r\n                NEITHER THE COMPANY NOR ANYONE ASSOCIATED WITH THE COMPANY\r\n                REPRESENTS OR WARRANTS THAT THE WEBSITE, ITS CONTENT, OR ANY\r\n                SERVICES OR ITEMS OBTAINED THROUGH THE WEBSITE WILL BE ACCURATE,\r\n                RELIABLE, ERROR-FREE, OR UNINTERRUPTED, THAT DEFECTS WILL BE\r\n                CORRECTED, THAT OUR SITE OR THE SERVER THAT MAKES IT AVAILABLE\r\n                ARE FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS, OR THAT THE\r\n                WEBSITE OR ANY SERVICES OR ITEMS OBTAINED THROUGH THE WEBSITE\r\n                WILL OTHERWISE MEET YOUR NEEDS OR EXPECTATIONS.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                TO THE FULLEST EXTENT PROVIDED BY LAW, THE COMPANY HEREBY\r\n                DISCLAIMS ALL WARRANTIES OF ANY KIND, WHETHER EXPRESS OR\r\n                IMPLIED, STATUTORY, OR OTHERWISE, INCLUDING BUT NOT LIMITED TO\r\n                ANY WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT, AND FITNESS\r\n                FOR PARTICULAR PURPOSE.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                THE FOREGOING DOES NOT AFFECT ANY WARRANTIES THAT CANNOT BE\r\n                EXCLUDED OR LIMITED UNDER APPLICABLE LAW.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Some jurisdictions do not allow the certain types of warranties\r\n                or limitations on applicable statutory rights of a consumer.\r\n                Some or all of the above exclusions and limitations may not\r\n                apply to You. In such case the exclusions and limitations set\r\n                forth in this section shall be applied to the greatest extent\r\n                possible under applicable law.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Governing Law</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                The laws of the Country, excluding its conflicts of law rules,\r\n                shall govern this Terms and Your use of the Service. Your use of\r\n                the Application may also be subject to other local, state,\r\n                national, or international laws.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Arbitration</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                If you have any dispute about the Service, you first agree to\r\n                reach an agreement with the Company using your best endeavors to\r\n                resolve.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                For European Union (EU) Users\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                If You are a European Union consumer, you will benefit from any\r\n                mandatory provisions of the law of the country in which you are\r\n                resident in.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                United States Legal Compliance\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You represent and warrant that (i) You are not located in a\r\n                country that is subject to the United States government embargo,\r\n                or that has been designated by the United States government as a\r\n                \"terrorist supporting\" country, and (ii) You are not listed on\r\n                any United States government list of prohibited or restricted\r\n                parties.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Severability</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                If any provision of these Terms is held to be unenforceable or\r\n                invalid, such provision will be changed and interpreted to\r\n                accomplish the objectives of such provision to the greatest\r\n                extent possible under applicable law and the remaining\r\n                provisions will continue in full force and effect.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Waiver</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Except as provided herein, the failure to exercise a right or to\r\n                require performance of an obligation under this Terms shall not\r\n                effect a party's ability to exercise such right or require such\r\n                performance at any time thereafter nor shall be the waiver of a\r\n                breach constitute a waiver of any subsequent breach.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">Indemnification</p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                You agree to defend, indemnify, and hold harmless the Company,\r\n                its Affiliates, licensors, and service providers, and its and\r\n                their respective officers, directors, employees, contractors,\r\n                agents, licensors, suppliers, successors, and assigns from and\r\n                against any claims, liabilities, damages, judgments, awards,\r\n                losses, costs, expenses, or fees (including reasonable\r\n                attorneys' fees) arising out of or relating to your violation of\r\n                these Terms of Use or your use of the Website, including, but\r\n                not limited to, your User Contributions, your violation of\r\n                rights of another or your conduct in relation to the Website.\r\n                Some jurisdictions limit consumer indemnities, therefore some or\r\n                all of the indemnity provisions above may not apply to you.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Monitoring and Enforcement; Termination\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We have the right to:\r\n                <br />\r\n                Remove or refuse to post any User Contributions for any\r\n                violations of these Terms of Use.\r\n                <br />\r\n                Take any action with respect to any User Contribution that we\r\n                deem necessary or appropriate in our sole discretion, including\r\n                if we believe that such User Contribution violates the Terms of\r\n                Use, including the Content Standards, infringes any intellectual\r\n                property right or other right of any person or entity, threatens\r\n                the personal safety of users of the Website or the public, or\r\n                could create liability for the Company.\r\n                <br />\r\n                Disclose your identity or other information about you to any\r\n                third party who claims that material posted by you violates\r\n                their rights, including their intellectual property rights or\r\n                their right to privacy.\r\n                <br />\r\n                Take appropriate legal action, including without limitation,\r\n                referral to law enforcement, for any illegal or unauthorized use\r\n                of the Website.\r\n                <br />\r\n                Terminate or suspend your access to all or part of the Website\r\n                for any reason, including without limitation, any violation of\r\n                these Terms of Use.\r\n                <br />\r\n                Without limiting the foregoing, we have the right to cooperate\r\n                fully with any law enforcement authorities or court order\r\n                requesting or directing us to disclose the identity or other\r\n                information of anyone posting any materials on or through the\r\n                Website. YOU WAIVE AND HOLD HARMLESS THE COMPANY AND ITS\r\n                AFFILIATES FROM ANY CLAIMS RESULTING FROM ANY ACTION TAKEN BY\r\n                THE COMPANY, DURING, OR TAKEN AS A CONSEQUENCE OF,\r\n                INVESTIGATIONS BY EITHER THE COMPANY OR LAW ENFORCEMENT\r\n                AUTHORITIES.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We cannot review all material before it is posted on the\r\n                Website, and cannot ensure prompt removal of objectionable\r\n                material after it has been posted. Accordingly, we assume no\r\n                liability for any action or inaction regarding transmissions,\r\n                communications, or content provided by any user or third party.\r\n                We have no liability or responsibility to anyone for performance\r\n                or nonperformance of the activities described in this section.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Translation Interpretation\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                These Terms and Conditions may have been translated if We have\r\n                made them available to You on our Service. You agree that the\r\n                original English text shall prevail in the case of a dispute.\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                Changes to These Terms and Conditions\r\n            </p>\r\n            <p className=\"text-gray-300 mb-5 text-lg\">\r\n                We reserve the right, at Our sole discretion, to modify or\r\n                replace these Terms at any time. You agree we will not be liable\r\n                for any revisions, modifications or suspension of the Website.\r\n                By continuing to access or use Our Service after those revisions\r\n                become effective. You agree to be bound by the revised terms.\r\n                Every time you wish to use our site, please check these terms to\r\n                ensure you understand the terms that apply at that time. If you\r\n                do not agree to the new terms, whole or in part, please stop\r\n                using the Website.\r\n            </p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TermsCondition;\r\n","const AnalyticsCard = ({\r\n    title,\r\n    image,\r\n    value,\r\n    green = false,\r\n    change = false,\r\n    changeValue = 0,\r\n}) => {\r\n    const border = { borderColor: green ? \"#61d97c\" : \"#33a2ff\" };\r\n\r\n    return (\r\n        <div\r\n            className=\"p-5 m-5 rounded-xl text-left bg-dark-300 border-l-8 flex items-center gap-4\"\r\n            style={border}\r\n        >\r\n            <img src={image} alt={title}/>\r\n            <div>\r\n                <h3 className=\"mb-5 text-2xl text-gray-200\">{title}</h3>\r\n\r\n                <p className=\"text-4xl break-all text-gray-200\">${value}</p>\r\n\r\n                {change && (\r\n                    <>\r\n                        {changeValue !== 0 && (\r\n                            <span\r\n                            className={`mr-1 ${\r\n                                changeValue > 0\r\n                                ? \"text-green-600\"\r\n                                : \"text-red-600\"\r\n                            }`}\r\n                            >\r\n                                {changeValue > 0 ? \"▲\" : \"▼\"}\r\n                            </span>\r\n                        )}\r\n                        <span className=\"text-base mt-3 text-gray-200\">\r\n                            {parseFloat(changeValue).toFixed(2)}%\r\n                        </span>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalyticsCard;\r\n","const TableRow = ({ coin, index }) => {\r\n    return (\r\n        <tr\r\n            className={\r\n                index !== 0\r\n                    ? `text-gray-300 border-t-2 border-gray-900`\r\n                    : undefined\r\n            }\r\n        >\r\n            <td class=\"text-gray-300 px-4 py-3\">{coin.market_cap_rank}</td>\r\n            <td class=\"text-gray-300 px-4 py-3 break-all\">\r\n                <img\r\n                    className=\"w-8 inline-block mr-2\"\r\n                    src={coin.image}\r\n                    alt={coin.id}\r\n                />\r\n                <span>{coin.id}</span>\r\n            </td>\r\n            <td class=\"text-gray-300 px-4 py-3\">{coin.symbol}</td>\r\n            <td class=\"text-gray-300 px-4 py-3 break-all\">\r\n                ${coin.current_price}\r\n            </td>\r\n            <td\r\n                class=\"text-gray-300 px-4 py-3 break-all\"\r\n                style={\r\n                    coin.price_change_percentage_24h >= 0\r\n                        ? { color: \"#61d97c\" }\r\n                        : { color: \"#ff1e4d\" }\r\n                }\r\n            >\r\n                {parseFloat(coin.price_change_percentage_24h).toFixed(4)}%\r\n            </td>\r\n            <td class=\"text-gray-300 px-4 py-3 break-all\">\r\n                ${coin.market_cap}\r\n            </td>\r\n            <td class=\"text-gray-300 px-4 py-3\">\r\n                <a className=\"py-1 px-3\" href={`/chart/${coin.id}`}>\r\n                    &gt;\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableRow;\r\n","import { useEffect, useState } from \"react\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst AnalyticsTable = ({ coinList = [] }) => {\r\n    const [showCoins, setShowCoins] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setShowCoins(coinList);\r\n    }, [coinList]);\r\n\r\n    useEffect(() => {\r\n        let tempCoins = [];\r\n\r\n        coinList.forEach((coin) => {\r\n            if (coin.id.toLowerCase().includes(searchQuery.toLowerCase())) {\r\n                tempCoins.push(coin);\r\n            }\r\n        });\r\n\r\n        setShowCoins(tempCoins);\r\n    }, [searchQuery]);\r\n\r\n    return (\r\n        <section class=\"body-font\">\r\n            <div class=\"container px-5 py-0 mx-auto\">\r\n                <div class=\"flex flex-col text-left w-full mb-4\">\r\n                    <div class=\"relative text-gray-200\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={searchQuery}\r\n                            onChange={(e) => {\r\n                                setSearchQuery(e.target.value);\r\n                            }}\r\n                            class=\"p-2 text-base text-gray-100 bg-gray-900 rounded-md focus:outline-none focus:bg-gray-800 w-full\"\r\n                            placeholder=\"Search...\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\" w-full mx-auto overflow-auto\">\r\n                    <table class=\"table-auto w-full text-left whitespace-no-wrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600 rounded-tl rounded-bl\">\r\n                                    Rank\r\n                                </th>\r\n                                <th class=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600 l\">\r\n                                    Name\r\n                                </th>\r\n                                <th class=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600\">\r\n                                    Symbol\r\n                                </th>\r\n                                <th class=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600\">\r\n                                    Price\r\n                                </th>\r\n                                <th class=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600\">\r\n                                    Price(24h)%\r\n                                </th>\r\n                                <th class=\"px-4 py-3 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600\">\r\n                                    Market cap\r\n                                </th>\r\n                                <th class=\"w-10 title-font tracking-wider font-medium text-gray-200 text-sm bg-dark-600 rounded-tr rounded-br\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showCoins.map((coin, index) => (\r\n                                <TableRow\r\n                                    key={index}\r\n                                    coin={coin}\r\n                                    index={index}\r\n                                />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    {!coinList.length && (\r\n                        <h2 className=\"text-gray-200 text-2xl text-center my-5 w-full\">\r\n                            Loading...\r\n                        </h2>\r\n                    )}\r\n                    {!showCoins.length && coinList.length && (\r\n                        <h2 className=\"text-gray-200 text-2xl text-center my-5 w-full\">\r\n                            No match found\r\n                        </h2>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AnalyticsTable;\r\n","class ChartAPI {\r\n    constructor() {\r\n        this.API_URL = \"https://api.coingecko.com/api/v3/\";\r\n    }\r\n\r\n    globalInfo = async () => {\r\n        try {\r\n            const response = await fetch(this.API_URL + \"global\");\r\n            const data = await response.json();\r\n\r\n            return {\r\n                status: \"ok\",\r\n                ...data,\r\n            };\r\n        } catch (err) {\r\n            return {\r\n                status: \"error\",\r\n            };\r\n        }\r\n    };\r\n\r\n    allCoinInfo = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                this.API_URL +\r\n                    \"coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=true\"\r\n            );\r\n            const data = await response.json();\r\n\r\n            return {\r\n                status: \"ok\",\r\n                data: data,\r\n            };\r\n        } catch (err) {\r\n            return {\r\n                status: \"error\",\r\n            };\r\n        }\r\n    };\r\n\r\n    coinInfo = async (id) => {\r\n        try {\r\n            const response = await fetch(\r\n                this.API_URL +\r\n                    `coins/${id}?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=true`\r\n            );\r\n            const data = await response.json();\r\n\r\n            return {\r\n                status: \"ok\",\r\n                data: data,\r\n            };\r\n        } catch (err) {\r\n            return {\r\n                status: \"error\",\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\nexport default ChartAPI;\r\n","import { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport Layout from \"../components/layout\";\r\nimport AnalyticsCard from \"../components/Analytics/AnalyticsCard\";\r\nimport AnalyticsTable from \"../components/Analytics/AnalyticsTable\";\r\nimport ChartAPI from \"../services/liveChartApi\";\r\n\r\nconst LiveChart = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [bitcoin, setBitcoin] = useState(0);\r\n    const [bitImg, setBitImg] = useState(\"\")\r\n\r\n    const [ethereum, setEthereum] = useState(0)\r\n    const [ethImg, setEthImg] = useState(\"\")\r\n\r\n    const [coinList, setCoinList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let get = async () => {\r\n            const response = await new ChartAPI().coinInfo(\"bitcoin\");\r\n\r\n            if (response.status === \"ok\") {\r\n                setBitcoin(response.data.market_data.current_price.usd)\r\n                setBitImg(response.data.image.small);\r\n            }\r\n        };\r\n\r\n        get();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let get = async () => {\r\n            const response = await new ChartAPI().coinInfo(\"ethereum\");\r\n\r\n            if (response.status === \"ok\") {\r\n                setEthereum(response.data.market_data.current_price.usd);\r\n                setEthImg(response.data.image.small);\r\n            }\r\n        };\r\n\r\n        get();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let get = async () => {\r\n            const response = await new ChartAPI().allCoinInfo();\r\n\r\n            if (response.status === \"ok\") {\r\n                setCoinList(response.data);\r\n            }\r\n        };\r\n\r\n        get();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex relative bg-black min-h-screen\">\r\n            <Sidebar show={show} setShow={setShow} />\r\n            <Layout show={show} setShow={setShow}>\r\n                <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2\">\r\n                    <AnalyticsCard title=\"Bitcoin\" value={bitcoin} image={bitImg}/>\r\n\r\n                    <AnalyticsCard title=\"Ethereum\" value={ethereum} image={ethImg}/>\r\n                </div>\r\n\r\n                <AnalyticsTable coinList={coinList} />\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LiveChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport Layout from \"../components/layout\";\r\nimport ChartAPI from \"../services/liveChartApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst CoinChart = () => {\r\n    const [show, setShow] = useState(false);\r\n    const { id } = useParams();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let get = async () => {\r\n            const response = await new ChartAPI().coinInfo(id);\r\n\r\n            if (!response.error) {\r\n                setName(response.data.name);\r\n                setPrice(response.data.market_data.current_price.usd);\r\n                setHistory(response.data.market_data.sparkline_7d.price);\r\n            } else {\r\n                setError(response.error);\r\n            }\r\n        };\r\n\r\n        get();\r\n    }, [id]);\r\n\r\n    const listOfLength = (length) => {\r\n        let list = [];\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            list.push(i);\r\n        }\r\n\r\n        return list;\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex relative bg-black min-h-screen\">\r\n            <Sidebar show={show} setShow={setShow} />\r\n            <Layout show={show} setShow={setShow}>\r\n                {!error ? (\r\n                    <div className=\"w-11/12 m-auto py-6\">\r\n                        <h2 className=\"text-gray-300 mb-2 text-3xl\">{name}</h2>\r\n                        <p className=\"text-gray-200 mb-10 text-4xl\">${price}</p>\r\n\r\n                        <div className=\"p-4 rounded-xl bg-dark-600\">\r\n                            <Line\r\n                                style={{ maxWidth: \"100%\", minHeight: \"500px\" }}\r\n                                data={{\r\n                                    labels: listOfLength(history.length),\r\n                                    datasets: [\r\n                                        {\r\n                                            borderColor: \"#33a2ff\",\r\n                                            borderWidth: 2,\r\n                                            pointRadius: 3,\r\n                                            data: history,\r\n                                        },\r\n                                    ],\r\n                                }}\r\n                                options={chartOptions}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"min-h-full min-w-full flex items-center justify-center\">\r\n                        <h1 className=\"text-gray-100 text-4xl\">{error}</h1>\r\n                    </div>\r\n                )}\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CoinChart;\r\n","import React from \"react\";\nimport { Navigate , Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ children }) {\n    const isAuthenticated = localStorage.getItem(\"sessionId\");\n\n    return isAuthenticated\n    ? children\n    : <Navigate to=\"/login\" />;\n    }\n\nexport default ProtectedRoute;\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/login\";\nimport SignUp from \"./pages/signup\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Swap from \"./pages/Swap\";\nimport Buy from \"./pages/Buy\";\nimport VerifyEmail from \"./pages/VerifyEmail\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Users from \"./pages/Users\";\nimport Send from \"./pages/Send\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\nimport TermsCondition from \"./pages/TermsCondition\";\nimport LiveChart from \"./pages/LiveChart\";\nimport CoinChart from \"./pages/CoinChart\";\nimport ProtectedRoute from \"./components/protectedRoute\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <ProtectedRoute>\n                  <Home />\n                </ProtectedRoute>\n              }\n            ></Route>\n            <Route path=\"/swap\" element={<Swap />}></Route>\n            <Route path=\"/buy\" element={<Buy />}></Route>\n\n            <Route path=\"/login\" element={<Login />}></Route>\n            <Route path=\"/forgot\" element={<ForgotPassword />}></Route>\n            <Route\n              path=\"/account/verify-email\"\n              element={<VerifyEmail />}\n            ></Route>\n            <Route path=\"/signup\" element={<SignUp />}></Route>\n            <Route\n              path=\"/account/reset-password\"\n              element={<ResetPassword />}\n            ></Route>\n            <Route path=\"/users\" element={<Users />}></Route>\n            <Route path=\"/send\" element={<Send />}></Route>\n            <Route path=\"/privacy-policy\" element={<PrivacyPolicy />}></Route>\n            <Route path=\"/terms-condition\" element={<TermsCondition />}></Route>\n            <Route path=\"/chart\" element={<LiveChart />}></Route>\n            <Route path=\"/chart/:id\" element={<CoinChart />}></Route>\n          </Routes>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}